Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> ecafile
Rule 1     ecafile -> import
Rule 2     ecafile -> constant
Rule 3     ecafile -> declaration
Rule 4     ecafile -> ecarule
Rule 5     ecafile -> NEWLINE
Rule 6     ecafile -> import ecafile
Rule 7     ecafile -> celldef ecafile
Rule 8     ecafile -> constant ecafile
Rule 9     ecafile -> declaration ecafile
Rule 10    ecafile -> ecarule ecafile
Rule 11    ecafile -> NEWLINE ecafile
Rule 12    import -> IMPORT CNAME NEWLINE
Rule 13    celldef -> CELL stringval GADGET stringval OPTIONS dictvalue NEWLINE
Rule 14    celldef -> CELL stringval dictvalue NEWLINE
Rule 15    constant -> CONSTANT CNAME EQUALS expression NEWLINE
Rule 16    declaration -> DECLARE CNAME NEWLINE
Rule 17    declaration -> DECLARE assign NEWLINE
Rule 18    opt_rulename -> RULE CNAME NEWLINE
Rule 19    opt_rulename -> <empty>
Rule 20    ecarule -> opt_rulename event action
Rule 21    ecarule -> opt_rulename event condition action
Rule 22    event -> EVENT CNAME newline
Rule 23    condition -> CONDITION expression newline
Rule 24    action -> ACTION calls
Rule 25    action_statement -> expression
Rule 26    action_statement -> assign
Rule 27    calls -> action_statement newline
Rule 28    calls -> action_statement newline calls
Rule 29    expression -> expression POINT CNAME LPAREN expressionlist RPAREN
Rule 30    expression -> expression POINT CNAME LPAREN RPAREN
Rule 31    expression -> expression POINT CNAME
Rule 32    expression -> CNAME LPAREN expressionlist RPAREN
Rule 33    expression -> CNAME LPAREN RPAREN
Rule 34    expressionlist -> expression
Rule 35    expressionlist -> expression COMMA expressionlist
Rule 36    expression -> expression LSBRACK expression RSBRACK
Rule 37    expression -> LPAREN expression RPAREN
Rule 38    expression -> CNAME
Rule 39    expression -> NUMBER
Rule 40    expression -> MINUS expression
Rule 41    expression -> stringval
Rule 42    expression -> TRUE
Rule 43    expression -> FALSE
Rule 44    expression -> NONE
Rule 45    expression -> LSBRACK listitems RSBRACK
Rule 46    expression -> LSBRACK RSBRACK
Rule 47    listitems -> expression
Rule 48    listitems -> expression COMMA listitems
Rule 49    expression -> dictvalue
Rule 50    dictvalue -> LCBRACK dictitems RCBRACK
Rule 51    dictvalue -> LCBRACK RCBRACK
Rule 52    dicttag -> CNAME
Rule 53    dicttag -> stringval
Rule 54    dictitems -> dicttag COLON expression
Rule 55    dictitems -> dicttag COLON expression COMMA dictitems
Rule 56    expression -> NEWEVENT CNAME dictvalue
Rule 57    assign -> CNAME EQUALS expression
Rule 58    assign -> CNAME LSBRACK expression RSBRACK EQUALS expression
Rule 59    expression -> expression COMPARE expression
Rule 60    expression -> NOT expression
Rule 61    expression -> expression OR expression
Rule 62    expression -> expression AND expression
Rule 63    expression -> expression IN expression
Rule 64    expression -> expression MODULO expression
Rule 65    expression -> expression PLUS expression
Rule 66    expression -> expression MINUS expression
Rule 67    expression -> expression TIMDIV expression
Rule 68    expression -> IF expression THEN action_statement ELSE action_statement
Rule 69    forall_header -> FORALL CNAME
Rule 70    expression -> forall_header IN expression COLON action_statement
Rule 71    stringval -> STRING
Rule 72    newline -> NEWLINE
Rule 73    newline -> NEWLINE newline

Terminals, with rules where they appear

ACTION               : 24
AND                  : 62
CELL                 : 13 14
CNAME                : 12 15 16 18 22 29 30 31 32 33 38 52 56 57 58 69
COLON                : 54 55 70
COMMA                : 35 48 55
COMPARE              : 59
CONDITION            : 23
CONSTANT             : 15
DECLARE              : 16 17
ELSE                 : 68
EQUALS               : 15 57 58
EVENT                : 22
FALSE                : 43
FORALL               : 69
GADGET               : 13
IF                   : 68
IMPORT               : 12
IN                   : 63 70
LCBRACK              : 50 51
LPAREN               : 29 30 32 33 37
LSBRACK              : 36 45 46 58
MINUS                : 40 66
MODULO               : 64
NEWEVENT             : 56
NEWLINE              : 5 11 12 13 14 15 16 17 18 72 73
NONE                 : 44
NOT                  : 60
NUMBER               : 39
OPTIONS              : 13
OR                   : 61
PLUS                 : 65
POINT                : 29 30 31
RCBRACK              : 50 51
RPAREN               : 29 30 32 33 37
RSBRACK              : 36 45 46 58
RULE                 : 18
STRING               : 71
THEN                 : 68
TIMDIV               : 67
TRUE                 : 42
error                : 

Nonterminals, with rules where they appear

action               : 20 21
action_statement     : 27 28 68 68 70
assign               : 17 26
calls                : 24 28
celldef              : 7
condition            : 21
constant             : 2 8
declaration          : 3 9
dictitems            : 50 55
dicttag              : 54 55
dictvalue            : 13 14 49 56
ecafile              : 6 7 8 9 10 11 0
ecarule              : 4 10
event                : 20 21
expression           : 15 23 25 29 30 31 34 35 36 36 37 40 47 48 54 55 57 58 58 59 59 60 61 61 62 62 63 63 64 64 65 65 66 66 67 67 68 70
expressionlist       : 29 32 35
forall_header        : 70
import               : 1 6
listitems            : 45 48
newline              : 22 23 27 28 73
opt_rulename         : 20 21
stringval            : 13 13 14 41 53

Parsing method: LALR

state 0

    (0) S' -> . ecafile
    (1) ecafile -> . import
    (2) ecafile -> . constant
    (3) ecafile -> . declaration
    (4) ecafile -> . ecarule
    (5) ecafile -> . NEWLINE
    (6) ecafile -> . import ecafile
    (7) ecafile -> . celldef ecafile
    (8) ecafile -> . constant ecafile
    (9) ecafile -> . declaration ecafile
    (10) ecafile -> . ecarule ecafile
    (11) ecafile -> . NEWLINE ecafile
    (12) import -> . IMPORT CNAME NEWLINE
    (15) constant -> . CONSTANT CNAME EQUALS expression NEWLINE
    (16) declaration -> . DECLARE CNAME NEWLINE
    (17) declaration -> . DECLARE assign NEWLINE
    (20) ecarule -> . opt_rulename event action
    (21) ecarule -> . opt_rulename event condition action
    (13) celldef -> . CELL stringval GADGET stringval OPTIONS dictvalue NEWLINE
    (14) celldef -> . CELL stringval dictvalue NEWLINE
    (18) opt_rulename -> . RULE CNAME NEWLINE
    (19) opt_rulename -> .

    NEWLINE         shift and go to state 11
    IMPORT          shift and go to state 3
    CONSTANT        shift and go to state 2
    DECLARE         shift and go to state 5
    CELL            shift and go to state 7
    RULE            shift and go to state 1
    EVENT           reduce using rule 19 (opt_rulename -> .)

    import                         shift and go to state 4
    constant                       shift and go to state 8
    opt_rulename                   shift and go to state 10
    ecarule                        shift and go to state 9
    celldef                        shift and go to state 6
    declaration                    shift and go to state 12
    ecafile                        shift and go to state 13

state 1

    (18) opt_rulename -> RULE . CNAME NEWLINE

    CNAME           shift and go to state 14


state 2

    (15) constant -> CONSTANT . CNAME EQUALS expression NEWLINE

    CNAME           shift and go to state 15


state 3

    (12) import -> IMPORT . CNAME NEWLINE

    CNAME           shift and go to state 16


state 4

    (1) ecafile -> import .
    (6) ecafile -> import . ecafile
    (1) ecafile -> . import
    (2) ecafile -> . constant
    (3) ecafile -> . declaration
    (4) ecafile -> . ecarule
    (5) ecafile -> . NEWLINE
    (6) ecafile -> . import ecafile
    (7) ecafile -> . celldef ecafile
    (8) ecafile -> . constant ecafile
    (9) ecafile -> . declaration ecafile
    (10) ecafile -> . ecarule ecafile
    (11) ecafile -> . NEWLINE ecafile
    (12) import -> . IMPORT CNAME NEWLINE
    (15) constant -> . CONSTANT CNAME EQUALS expression NEWLINE
    (16) declaration -> . DECLARE CNAME NEWLINE
    (17) declaration -> . DECLARE assign NEWLINE
    (20) ecarule -> . opt_rulename event action
    (21) ecarule -> . opt_rulename event condition action
    (13) celldef -> . CELL stringval GADGET stringval OPTIONS dictvalue NEWLINE
    (14) celldef -> . CELL stringval dictvalue NEWLINE
    (18) opt_rulename -> . RULE CNAME NEWLINE
    (19) opt_rulename -> .

    $end            reduce using rule 1 (ecafile -> import .)
    NEWLINE         shift and go to state 11
    IMPORT          shift and go to state 3
    CONSTANT        shift and go to state 2
    DECLARE         shift and go to state 5
    CELL            shift and go to state 7
    RULE            shift and go to state 1
    EVENT           reduce using rule 19 (opt_rulename -> .)

    import                         shift and go to state 4
    constant                       shift and go to state 8
    opt_rulename                   shift and go to state 10
    ecarule                        shift and go to state 9
    celldef                        shift and go to state 6
    declaration                    shift and go to state 12
    ecafile                        shift and go to state 17

state 5

    (16) declaration -> DECLARE . CNAME NEWLINE
    (17) declaration -> DECLARE . assign NEWLINE
    (57) assign -> . CNAME EQUALS expression
    (58) assign -> . CNAME LSBRACK expression RSBRACK EQUALS expression

    CNAME           shift and go to state 18

    assign                         shift and go to state 19

state 6

    (7) ecafile -> celldef . ecafile
    (1) ecafile -> . import
    (2) ecafile -> . constant
    (3) ecafile -> . declaration
    (4) ecafile -> . ecarule
    (5) ecafile -> . NEWLINE
    (6) ecafile -> . import ecafile
    (7) ecafile -> . celldef ecafile
    (8) ecafile -> . constant ecafile
    (9) ecafile -> . declaration ecafile
    (10) ecafile -> . ecarule ecafile
    (11) ecafile -> . NEWLINE ecafile
    (12) import -> . IMPORT CNAME NEWLINE
    (15) constant -> . CONSTANT CNAME EQUALS expression NEWLINE
    (16) declaration -> . DECLARE CNAME NEWLINE
    (17) declaration -> . DECLARE assign NEWLINE
    (20) ecarule -> . opt_rulename event action
    (21) ecarule -> . opt_rulename event condition action
    (13) celldef -> . CELL stringval GADGET stringval OPTIONS dictvalue NEWLINE
    (14) celldef -> . CELL stringval dictvalue NEWLINE
    (18) opt_rulename -> . RULE CNAME NEWLINE
    (19) opt_rulename -> .

    NEWLINE         shift and go to state 11
    IMPORT          shift and go to state 3
    CONSTANT        shift and go to state 2
    DECLARE         shift and go to state 5
    CELL            shift and go to state 7
    RULE            shift and go to state 1
    EVENT           reduce using rule 19 (opt_rulename -> .)

    import                         shift and go to state 4
    constant                       shift and go to state 8
    opt_rulename                   shift and go to state 10
    ecarule                        shift and go to state 9
    celldef                        shift and go to state 6
    declaration                    shift and go to state 12
    ecafile                        shift and go to state 20

state 7

    (13) celldef -> CELL . stringval GADGET stringval OPTIONS dictvalue NEWLINE
    (14) celldef -> CELL . stringval dictvalue NEWLINE
    (71) stringval -> . STRING

    STRING          shift and go to state 22

    stringval                      shift and go to state 21

state 8

    (2) ecafile -> constant .
    (8) ecafile -> constant . ecafile
    (1) ecafile -> . import
    (2) ecafile -> . constant
    (3) ecafile -> . declaration
    (4) ecafile -> . ecarule
    (5) ecafile -> . NEWLINE
    (6) ecafile -> . import ecafile
    (7) ecafile -> . celldef ecafile
    (8) ecafile -> . constant ecafile
    (9) ecafile -> . declaration ecafile
    (10) ecafile -> . ecarule ecafile
    (11) ecafile -> . NEWLINE ecafile
    (12) import -> . IMPORT CNAME NEWLINE
    (15) constant -> . CONSTANT CNAME EQUALS expression NEWLINE
    (16) declaration -> . DECLARE CNAME NEWLINE
    (17) declaration -> . DECLARE assign NEWLINE
    (20) ecarule -> . opt_rulename event action
    (21) ecarule -> . opt_rulename event condition action
    (13) celldef -> . CELL stringval GADGET stringval OPTIONS dictvalue NEWLINE
    (14) celldef -> . CELL stringval dictvalue NEWLINE
    (18) opt_rulename -> . RULE CNAME NEWLINE
    (19) opt_rulename -> .

    $end            reduce using rule 2 (ecafile -> constant .)
    NEWLINE         shift and go to state 11
    IMPORT          shift and go to state 3
    CONSTANT        shift and go to state 2
    DECLARE         shift and go to state 5
    CELL            shift and go to state 7
    RULE            shift and go to state 1
    EVENT           reduce using rule 19 (opt_rulename -> .)

    import                         shift and go to state 4
    constant                       shift and go to state 8
    opt_rulename                   shift and go to state 10
    ecarule                        shift and go to state 9
    celldef                        shift and go to state 6
    declaration                    shift and go to state 12
    ecafile                        shift and go to state 23

state 9

    (4) ecafile -> ecarule .
    (10) ecafile -> ecarule . ecafile
    (1) ecafile -> . import
    (2) ecafile -> . constant
    (3) ecafile -> . declaration
    (4) ecafile -> . ecarule
    (5) ecafile -> . NEWLINE
    (6) ecafile -> . import ecafile
    (7) ecafile -> . celldef ecafile
    (8) ecafile -> . constant ecafile
    (9) ecafile -> . declaration ecafile
    (10) ecafile -> . ecarule ecafile
    (11) ecafile -> . NEWLINE ecafile
    (12) import -> . IMPORT CNAME NEWLINE
    (15) constant -> . CONSTANT CNAME EQUALS expression NEWLINE
    (16) declaration -> . DECLARE CNAME NEWLINE
    (17) declaration -> . DECLARE assign NEWLINE
    (20) ecarule -> . opt_rulename event action
    (21) ecarule -> . opt_rulename event condition action
    (13) celldef -> . CELL stringval GADGET stringval OPTIONS dictvalue NEWLINE
    (14) celldef -> . CELL stringval dictvalue NEWLINE
    (18) opt_rulename -> . RULE CNAME NEWLINE
    (19) opt_rulename -> .

    $end            reduce using rule 4 (ecafile -> ecarule .)
    NEWLINE         shift and go to state 11
    IMPORT          shift and go to state 3
    CONSTANT        shift and go to state 2
    DECLARE         shift and go to state 5
    CELL            shift and go to state 7
    RULE            shift and go to state 1
    EVENT           reduce using rule 19 (opt_rulename -> .)

    import                         shift and go to state 4
    constant                       shift and go to state 8
    opt_rulename                   shift and go to state 10
    ecarule                        shift and go to state 9
    celldef                        shift and go to state 6
    declaration                    shift and go to state 12
    ecafile                        shift and go to state 24

state 10

    (20) ecarule -> opt_rulename . event action
    (21) ecarule -> opt_rulename . event condition action
    (22) event -> . EVENT CNAME newline

    EVENT           shift and go to state 25

    event                          shift and go to state 26

state 11

    (5) ecafile -> NEWLINE .
    (11) ecafile -> NEWLINE . ecafile
    (1) ecafile -> . import
    (2) ecafile -> . constant
    (3) ecafile -> . declaration
    (4) ecafile -> . ecarule
    (5) ecafile -> . NEWLINE
    (6) ecafile -> . import ecafile
    (7) ecafile -> . celldef ecafile
    (8) ecafile -> . constant ecafile
    (9) ecafile -> . declaration ecafile
    (10) ecafile -> . ecarule ecafile
    (11) ecafile -> . NEWLINE ecafile
    (12) import -> . IMPORT CNAME NEWLINE
    (15) constant -> . CONSTANT CNAME EQUALS expression NEWLINE
    (16) declaration -> . DECLARE CNAME NEWLINE
    (17) declaration -> . DECLARE assign NEWLINE
    (20) ecarule -> . opt_rulename event action
    (21) ecarule -> . opt_rulename event condition action
    (13) celldef -> . CELL stringval GADGET stringval OPTIONS dictvalue NEWLINE
    (14) celldef -> . CELL stringval dictvalue NEWLINE
    (18) opt_rulename -> . RULE CNAME NEWLINE
    (19) opt_rulename -> .

    $end            reduce using rule 5 (ecafile -> NEWLINE .)
    NEWLINE         shift and go to state 11
    IMPORT          shift and go to state 3
    CONSTANT        shift and go to state 2
    DECLARE         shift and go to state 5
    CELL            shift and go to state 7
    RULE            shift and go to state 1
    EVENT           reduce using rule 19 (opt_rulename -> .)

    import                         shift and go to state 4
    constant                       shift and go to state 8
    opt_rulename                   shift and go to state 10
    ecarule                        shift and go to state 9
    celldef                        shift and go to state 6
    declaration                    shift and go to state 12
    ecafile                        shift and go to state 27

state 12

    (3) ecafile -> declaration .
    (9) ecafile -> declaration . ecafile
    (1) ecafile -> . import
    (2) ecafile -> . constant
    (3) ecafile -> . declaration
    (4) ecafile -> . ecarule
    (5) ecafile -> . NEWLINE
    (6) ecafile -> . import ecafile
    (7) ecafile -> . celldef ecafile
    (8) ecafile -> . constant ecafile
    (9) ecafile -> . declaration ecafile
    (10) ecafile -> . ecarule ecafile
    (11) ecafile -> . NEWLINE ecafile
    (12) import -> . IMPORT CNAME NEWLINE
    (15) constant -> . CONSTANT CNAME EQUALS expression NEWLINE
    (16) declaration -> . DECLARE CNAME NEWLINE
    (17) declaration -> . DECLARE assign NEWLINE
    (20) ecarule -> . opt_rulename event action
    (21) ecarule -> . opt_rulename event condition action
    (13) celldef -> . CELL stringval GADGET stringval OPTIONS dictvalue NEWLINE
    (14) celldef -> . CELL stringval dictvalue NEWLINE
    (18) opt_rulename -> . RULE CNAME NEWLINE
    (19) opt_rulename -> .

    $end            reduce using rule 3 (ecafile -> declaration .)
    NEWLINE         shift and go to state 11
    IMPORT          shift and go to state 3
    CONSTANT        shift and go to state 2
    DECLARE         shift and go to state 5
    CELL            shift and go to state 7
    RULE            shift and go to state 1
    EVENT           reduce using rule 19 (opt_rulename -> .)

    import                         shift and go to state 4
    constant                       shift and go to state 8
    opt_rulename                   shift and go to state 10
    ecarule                        shift and go to state 9
    celldef                        shift and go to state 6
    declaration                    shift and go to state 12
    ecafile                        shift and go to state 28

state 13

    (0) S' -> ecafile .



state 14

    (18) opt_rulename -> RULE CNAME . NEWLINE

    NEWLINE         shift and go to state 29


state 15

    (15) constant -> CONSTANT CNAME . EQUALS expression NEWLINE

    EQUALS          shift and go to state 30


state 16

    (12) import -> IMPORT CNAME . NEWLINE

    NEWLINE         shift and go to state 31


state 17

    (6) ecafile -> import ecafile .

    $end            reduce using rule 6 (ecafile -> import ecafile .)


state 18

    (16) declaration -> DECLARE CNAME . NEWLINE
    (57) assign -> CNAME . EQUALS expression
    (58) assign -> CNAME . LSBRACK expression RSBRACK EQUALS expression

    NEWLINE         shift and go to state 33
    EQUALS          shift and go to state 32
    LSBRACK         shift and go to state 34


state 19

    (17) declaration -> DECLARE assign . NEWLINE

    NEWLINE         shift and go to state 35


state 20

    (7) ecafile -> celldef ecafile .

    $end            reduce using rule 7 (ecafile -> celldef ecafile .)


state 21

    (13) celldef -> CELL stringval . GADGET stringval OPTIONS dictvalue NEWLINE
    (14) celldef -> CELL stringval . dictvalue NEWLINE
    (50) dictvalue -> . LCBRACK dictitems RCBRACK
    (51) dictvalue -> . LCBRACK RCBRACK

    GADGET          shift and go to state 37
    LCBRACK         shift and go to state 36

    dictvalue                      shift and go to state 38

state 22

    (71) stringval -> STRING .

    POINT           reduce using rule 71 (stringval -> STRING .)
    LSBRACK         reduce using rule 71 (stringval -> STRING .)
    COMPARE         reduce using rule 71 (stringval -> STRING .)
    OR              reduce using rule 71 (stringval -> STRING .)
    AND             reduce using rule 71 (stringval -> STRING .)
    IN              reduce using rule 71 (stringval -> STRING .)
    MODULO          reduce using rule 71 (stringval -> STRING .)
    PLUS            reduce using rule 71 (stringval -> STRING .)
    MINUS           reduce using rule 71 (stringval -> STRING .)
    TIMDIV          reduce using rule 71 (stringval -> STRING .)
    NEWLINE         reduce using rule 71 (stringval -> STRING .)
    ELSE            reduce using rule 71 (stringval -> STRING .)
    RSBRACK         reduce using rule 71 (stringval -> STRING .)
    THEN            reduce using rule 71 (stringval -> STRING .)
    RPAREN          reduce using rule 71 (stringval -> STRING .)
    COMMA           reduce using rule 71 (stringval -> STRING .)
    COLON           reduce using rule 71 (stringval -> STRING .)
    RCBRACK         reduce using rule 71 (stringval -> STRING .)
    GADGET          reduce using rule 71 (stringval -> STRING .)
    LCBRACK         reduce using rule 71 (stringval -> STRING .)
    OPTIONS         reduce using rule 71 (stringval -> STRING .)


state 23

    (8) ecafile -> constant ecafile .

    $end            reduce using rule 8 (ecafile -> constant ecafile .)


state 24

    (10) ecafile -> ecarule ecafile .

    $end            reduce using rule 10 (ecafile -> ecarule ecafile .)


state 25

    (22) event -> EVENT . CNAME newline

    CNAME           shift and go to state 39


state 26

    (20) ecarule -> opt_rulename event . action
    (21) ecarule -> opt_rulename event . condition action
    (24) action -> . ACTION calls
    (23) condition -> . CONDITION expression newline

    ACTION          shift and go to state 41
    CONDITION       shift and go to state 42

    action                         shift and go to state 40
    condition                      shift and go to state 43

state 27

    (11) ecafile -> NEWLINE ecafile .

    $end            reduce using rule 11 (ecafile -> NEWLINE ecafile .)


state 28

    (9) ecafile -> declaration ecafile .

    $end            reduce using rule 9 (ecafile -> declaration ecafile .)


state 29

    (18) opt_rulename -> RULE CNAME NEWLINE .

    EVENT           reduce using rule 18 (opt_rulename -> RULE CNAME NEWLINE .)


state 30

    (15) constant -> CONSTANT CNAME EQUALS . expression NEWLINE
    (29) expression -> . expression POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> . expression POINT CNAME LPAREN RPAREN
    (31) expression -> . expression POINT CNAME
    (32) expression -> . CNAME LPAREN expressionlist RPAREN
    (33) expression -> . CNAME LPAREN RPAREN
    (36) expression -> . expression LSBRACK expression RSBRACK
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . CNAME
    (39) expression -> . NUMBER
    (40) expression -> . MINUS expression
    (41) expression -> . stringval
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . NONE
    (45) expression -> . LSBRACK listitems RSBRACK
    (46) expression -> . LSBRACK RSBRACK
    (49) expression -> . dictvalue
    (56) expression -> . NEWEVENT CNAME dictvalue
    (59) expression -> . expression COMPARE expression
    (60) expression -> . NOT expression
    (61) expression -> . expression OR expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression IN expression
    (64) expression -> . expression MODULO expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression TIMDIV expression
    (68) expression -> . IF expression THEN action_statement ELSE action_statement
    (70) expression -> . forall_header IN expression COLON action_statement
    (71) stringval -> . STRING
    (50) dictvalue -> . LCBRACK dictitems RCBRACK
    (51) dictvalue -> . LCBRACK RCBRACK
    (69) forall_header -> . FORALL CNAME

    CNAME           shift and go to state 54
    LPAREN          shift and go to state 58
    NUMBER          shift and go to state 56
    MINUS           shift and go to state 55
    TRUE            shift and go to state 49
    FALSE           shift and go to state 52
    NONE            shift and go to state 45
    LSBRACK         shift and go to state 59
    NEWEVENT        shift and go to state 48
    NOT             shift and go to state 57
    IF              shift and go to state 51
    STRING          shift and go to state 22
    LCBRACK         shift and go to state 36
    FORALL          shift and go to state 53

    expression                     shift and go to state 44
    stringval                      shift and go to state 46
    dictvalue                      shift and go to state 50
    forall_header                  shift and go to state 47

state 31

    (12) import -> IMPORT CNAME NEWLINE .

    NEWLINE         reduce using rule 12 (import -> IMPORT CNAME NEWLINE .)
    IMPORT          reduce using rule 12 (import -> IMPORT CNAME NEWLINE .)
    CONSTANT        reduce using rule 12 (import -> IMPORT CNAME NEWLINE .)
    DECLARE         reduce using rule 12 (import -> IMPORT CNAME NEWLINE .)
    CELL            reduce using rule 12 (import -> IMPORT CNAME NEWLINE .)
    RULE            reduce using rule 12 (import -> IMPORT CNAME NEWLINE .)
    EVENT           reduce using rule 12 (import -> IMPORT CNAME NEWLINE .)
    $end            reduce using rule 12 (import -> IMPORT CNAME NEWLINE .)


state 32

    (57) assign -> CNAME EQUALS . expression
    (29) expression -> . expression POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> . expression POINT CNAME LPAREN RPAREN
    (31) expression -> . expression POINT CNAME
    (32) expression -> . CNAME LPAREN expressionlist RPAREN
    (33) expression -> . CNAME LPAREN RPAREN
    (36) expression -> . expression LSBRACK expression RSBRACK
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . CNAME
    (39) expression -> . NUMBER
    (40) expression -> . MINUS expression
    (41) expression -> . stringval
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . NONE
    (45) expression -> . LSBRACK listitems RSBRACK
    (46) expression -> . LSBRACK RSBRACK
    (49) expression -> . dictvalue
    (56) expression -> . NEWEVENT CNAME dictvalue
    (59) expression -> . expression COMPARE expression
    (60) expression -> . NOT expression
    (61) expression -> . expression OR expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression IN expression
    (64) expression -> . expression MODULO expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression TIMDIV expression
    (68) expression -> . IF expression THEN action_statement ELSE action_statement
    (70) expression -> . forall_header IN expression COLON action_statement
    (71) stringval -> . STRING
    (50) dictvalue -> . LCBRACK dictitems RCBRACK
    (51) dictvalue -> . LCBRACK RCBRACK
    (69) forall_header -> . FORALL CNAME

    CNAME           shift and go to state 54
    LPAREN          shift and go to state 58
    NUMBER          shift and go to state 56
    MINUS           shift and go to state 55
    TRUE            shift and go to state 49
    FALSE           shift and go to state 52
    NONE            shift and go to state 45
    LSBRACK         shift and go to state 59
    NEWEVENT        shift and go to state 48
    NOT             shift and go to state 57
    IF              shift and go to state 51
    STRING          shift and go to state 22
    LCBRACK         shift and go to state 36
    FORALL          shift and go to state 53

    expression                     shift and go to state 60
    stringval                      shift and go to state 46
    dictvalue                      shift and go to state 50
    forall_header                  shift and go to state 47

state 33

    (16) declaration -> DECLARE CNAME NEWLINE .

    NEWLINE         reduce using rule 16 (declaration -> DECLARE CNAME NEWLINE .)
    IMPORT          reduce using rule 16 (declaration -> DECLARE CNAME NEWLINE .)
    CONSTANT        reduce using rule 16 (declaration -> DECLARE CNAME NEWLINE .)
    DECLARE         reduce using rule 16 (declaration -> DECLARE CNAME NEWLINE .)
    CELL            reduce using rule 16 (declaration -> DECLARE CNAME NEWLINE .)
    RULE            reduce using rule 16 (declaration -> DECLARE CNAME NEWLINE .)
    EVENT           reduce using rule 16 (declaration -> DECLARE CNAME NEWLINE .)
    $end            reduce using rule 16 (declaration -> DECLARE CNAME NEWLINE .)


state 34

    (58) assign -> CNAME LSBRACK . expression RSBRACK EQUALS expression
    (29) expression -> . expression POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> . expression POINT CNAME LPAREN RPAREN
    (31) expression -> . expression POINT CNAME
    (32) expression -> . CNAME LPAREN expressionlist RPAREN
    (33) expression -> . CNAME LPAREN RPAREN
    (36) expression -> . expression LSBRACK expression RSBRACK
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . CNAME
    (39) expression -> . NUMBER
    (40) expression -> . MINUS expression
    (41) expression -> . stringval
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . NONE
    (45) expression -> . LSBRACK listitems RSBRACK
    (46) expression -> . LSBRACK RSBRACK
    (49) expression -> . dictvalue
    (56) expression -> . NEWEVENT CNAME dictvalue
    (59) expression -> . expression COMPARE expression
    (60) expression -> . NOT expression
    (61) expression -> . expression OR expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression IN expression
    (64) expression -> . expression MODULO expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression TIMDIV expression
    (68) expression -> . IF expression THEN action_statement ELSE action_statement
    (70) expression -> . forall_header IN expression COLON action_statement
    (71) stringval -> . STRING
    (50) dictvalue -> . LCBRACK dictitems RCBRACK
    (51) dictvalue -> . LCBRACK RCBRACK
    (69) forall_header -> . FORALL CNAME

    CNAME           shift and go to state 54
    LPAREN          shift and go to state 58
    NUMBER          shift and go to state 56
    MINUS           shift and go to state 55
    TRUE            shift and go to state 49
    FALSE           shift and go to state 52
    NONE            shift and go to state 45
    LSBRACK         shift and go to state 59
    NEWEVENT        shift and go to state 48
    NOT             shift and go to state 57
    IF              shift and go to state 51
    STRING          shift and go to state 22
    LCBRACK         shift and go to state 36
    FORALL          shift and go to state 53

    expression                     shift and go to state 61
    stringval                      shift and go to state 46
    dictvalue                      shift and go to state 50
    forall_header                  shift and go to state 47

state 35

    (17) declaration -> DECLARE assign NEWLINE .

    NEWLINE         reduce using rule 17 (declaration -> DECLARE assign NEWLINE .)
    IMPORT          reduce using rule 17 (declaration -> DECLARE assign NEWLINE .)
    CONSTANT        reduce using rule 17 (declaration -> DECLARE assign NEWLINE .)
    DECLARE         reduce using rule 17 (declaration -> DECLARE assign NEWLINE .)
    CELL            reduce using rule 17 (declaration -> DECLARE assign NEWLINE .)
    RULE            reduce using rule 17 (declaration -> DECLARE assign NEWLINE .)
    EVENT           reduce using rule 17 (declaration -> DECLARE assign NEWLINE .)
    $end            reduce using rule 17 (declaration -> DECLARE assign NEWLINE .)


state 36

    (50) dictvalue -> LCBRACK . dictitems RCBRACK
    (51) dictvalue -> LCBRACK . RCBRACK
    (54) dictitems -> . dicttag COLON expression
    (55) dictitems -> . dicttag COLON expression COMMA dictitems
    (52) dicttag -> . CNAME
    (53) dicttag -> . stringval
    (71) stringval -> . STRING

    RCBRACK         shift and go to state 65
    CNAME           shift and go to state 62
    STRING          shift and go to state 22

    stringval                      shift and go to state 64
    dicttag                        shift and go to state 63
    dictitems                      shift and go to state 66

state 37

    (13) celldef -> CELL stringval GADGET . stringval OPTIONS dictvalue NEWLINE
    (71) stringval -> . STRING

    STRING          shift and go to state 22

    stringval                      shift and go to state 67

state 38

    (14) celldef -> CELL stringval dictvalue . NEWLINE

    NEWLINE         shift and go to state 68


state 39

    (22) event -> EVENT CNAME . newline
    (72) newline -> . NEWLINE
    (73) newline -> . NEWLINE newline

    NEWLINE         shift and go to state 69

    newline                        shift and go to state 70

state 40

    (20) ecarule -> opt_rulename event action .

    NEWLINE         reduce using rule 20 (ecarule -> opt_rulename event action .)
    IMPORT          reduce using rule 20 (ecarule -> opt_rulename event action .)
    CONSTANT        reduce using rule 20 (ecarule -> opt_rulename event action .)
    DECLARE         reduce using rule 20 (ecarule -> opt_rulename event action .)
    CELL            reduce using rule 20 (ecarule -> opt_rulename event action .)
    RULE            reduce using rule 20 (ecarule -> opt_rulename event action .)
    EVENT           reduce using rule 20 (ecarule -> opt_rulename event action .)
    $end            reduce using rule 20 (ecarule -> opt_rulename event action .)


state 41

    (24) action -> ACTION . calls
    (27) calls -> . action_statement newline
    (28) calls -> . action_statement newline calls
    (25) action_statement -> . expression
    (26) action_statement -> . assign
    (29) expression -> . expression POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> . expression POINT CNAME LPAREN RPAREN
    (31) expression -> . expression POINT CNAME
    (32) expression -> . CNAME LPAREN expressionlist RPAREN
    (33) expression -> . CNAME LPAREN RPAREN
    (36) expression -> . expression LSBRACK expression RSBRACK
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . CNAME
    (39) expression -> . NUMBER
    (40) expression -> . MINUS expression
    (41) expression -> . stringval
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . NONE
    (45) expression -> . LSBRACK listitems RSBRACK
    (46) expression -> . LSBRACK RSBRACK
    (49) expression -> . dictvalue
    (56) expression -> . NEWEVENT CNAME dictvalue
    (59) expression -> . expression COMPARE expression
    (60) expression -> . NOT expression
    (61) expression -> . expression OR expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression IN expression
    (64) expression -> . expression MODULO expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression TIMDIV expression
    (68) expression -> . IF expression THEN action_statement ELSE action_statement
    (70) expression -> . forall_header IN expression COLON action_statement
    (57) assign -> . CNAME EQUALS expression
    (58) assign -> . CNAME LSBRACK expression RSBRACK EQUALS expression
    (71) stringval -> . STRING
    (50) dictvalue -> . LCBRACK dictitems RCBRACK
    (51) dictvalue -> . LCBRACK RCBRACK
    (69) forall_header -> . FORALL CNAME

    CNAME           shift and go to state 74
    LPAREN          shift and go to state 58
    NUMBER          shift and go to state 56
    MINUS           shift and go to state 55
    TRUE            shift and go to state 49
    FALSE           shift and go to state 52
    NONE            shift and go to state 45
    LSBRACK         shift and go to state 59
    NEWEVENT        shift and go to state 48
    NOT             shift and go to state 57
    IF              shift and go to state 51
    STRING          shift and go to state 22
    LCBRACK         shift and go to state 36
    FORALL          shift and go to state 53

    expression                     shift and go to state 71
    assign                         shift and go to state 75
    calls                          shift and go to state 73
    action_statement               shift and go to state 72
    stringval                      shift and go to state 46
    dictvalue                      shift and go to state 50
    forall_header                  shift and go to state 47

state 42

    (23) condition -> CONDITION . expression newline
    (29) expression -> . expression POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> . expression POINT CNAME LPAREN RPAREN
    (31) expression -> . expression POINT CNAME
    (32) expression -> . CNAME LPAREN expressionlist RPAREN
    (33) expression -> . CNAME LPAREN RPAREN
    (36) expression -> . expression LSBRACK expression RSBRACK
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . CNAME
    (39) expression -> . NUMBER
    (40) expression -> . MINUS expression
    (41) expression -> . stringval
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . NONE
    (45) expression -> . LSBRACK listitems RSBRACK
    (46) expression -> . LSBRACK RSBRACK
    (49) expression -> . dictvalue
    (56) expression -> . NEWEVENT CNAME dictvalue
    (59) expression -> . expression COMPARE expression
    (60) expression -> . NOT expression
    (61) expression -> . expression OR expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression IN expression
    (64) expression -> . expression MODULO expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression TIMDIV expression
    (68) expression -> . IF expression THEN action_statement ELSE action_statement
    (70) expression -> . forall_header IN expression COLON action_statement
    (71) stringval -> . STRING
    (50) dictvalue -> . LCBRACK dictitems RCBRACK
    (51) dictvalue -> . LCBRACK RCBRACK
    (69) forall_header -> . FORALL CNAME

    CNAME           shift and go to state 54
    LPAREN          shift and go to state 58
    NUMBER          shift and go to state 56
    MINUS           shift and go to state 55
    TRUE            shift and go to state 49
    FALSE           shift and go to state 52
    NONE            shift and go to state 45
    LSBRACK         shift and go to state 59
    NEWEVENT        shift and go to state 48
    NOT             shift and go to state 57
    IF              shift and go to state 51
    STRING          shift and go to state 22
    LCBRACK         shift and go to state 36
    FORALL          shift and go to state 53

    expression                     shift and go to state 76
    stringval                      shift and go to state 46
    dictvalue                      shift and go to state 50
    forall_header                  shift and go to state 47

state 43

    (21) ecarule -> opt_rulename event condition . action
    (24) action -> . ACTION calls

    ACTION          shift and go to state 41

    action                         shift and go to state 77

state 44

    (15) constant -> CONSTANT CNAME EQUALS expression . NEWLINE
    (29) expression -> expression . POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> expression . POINT CNAME LPAREN RPAREN
    (31) expression -> expression . POINT CNAME
    (36) expression -> expression . LSBRACK expression RSBRACK
    (59) expression -> expression . COMPARE expression
    (61) expression -> expression . OR expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . IN expression
    (64) expression -> expression . MODULO expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . TIMDIV expression

    NEWLINE         shift and go to state 82
    POINT           shift and go to state 84
    LSBRACK         shift and go to state 85
    COMPARE         shift and go to state 81
    OR              shift and go to state 88
    AND             shift and go to state 78
    IN              shift and go to state 83
    MODULO          shift and go to state 87
    PLUS            shift and go to state 86
    MINUS           shift and go to state 80
    TIMDIV          shift and go to state 79


state 45

    (44) expression -> NONE .

    COMMA           reduce using rule 44 (expression -> NONE .)
    POINT           reduce using rule 44 (expression -> NONE .)
    LSBRACK         reduce using rule 44 (expression -> NONE .)
    COMPARE         reduce using rule 44 (expression -> NONE .)
    OR              reduce using rule 44 (expression -> NONE .)
    AND             reduce using rule 44 (expression -> NONE .)
    IN              reduce using rule 44 (expression -> NONE .)
    MODULO          reduce using rule 44 (expression -> NONE .)
    PLUS            reduce using rule 44 (expression -> NONE .)
    MINUS           reduce using rule 44 (expression -> NONE .)
    TIMDIV          reduce using rule 44 (expression -> NONE .)
    RCBRACK         reduce using rule 44 (expression -> NONE .)
    NEWLINE         reduce using rule 44 (expression -> NONE .)
    ELSE            reduce using rule 44 (expression -> NONE .)
    RSBRACK         reduce using rule 44 (expression -> NONE .)
    THEN            reduce using rule 44 (expression -> NONE .)
    RPAREN          reduce using rule 44 (expression -> NONE .)
    COLON           reduce using rule 44 (expression -> NONE .)


state 46

    (41) expression -> stringval .

    COMMA           reduce using rule 41 (expression -> stringval .)
    POINT           reduce using rule 41 (expression -> stringval .)
    LSBRACK         reduce using rule 41 (expression -> stringval .)
    COMPARE         reduce using rule 41 (expression -> stringval .)
    OR              reduce using rule 41 (expression -> stringval .)
    AND             reduce using rule 41 (expression -> stringval .)
    IN              reduce using rule 41 (expression -> stringval .)
    MODULO          reduce using rule 41 (expression -> stringval .)
    PLUS            reduce using rule 41 (expression -> stringval .)
    MINUS           reduce using rule 41 (expression -> stringval .)
    TIMDIV          reduce using rule 41 (expression -> stringval .)
    RCBRACK         reduce using rule 41 (expression -> stringval .)
    NEWLINE         reduce using rule 41 (expression -> stringval .)
    ELSE            reduce using rule 41 (expression -> stringval .)
    RSBRACK         reduce using rule 41 (expression -> stringval .)
    THEN            reduce using rule 41 (expression -> stringval .)
    RPAREN          reduce using rule 41 (expression -> stringval .)
    COLON           reduce using rule 41 (expression -> stringval .)


state 47

    (70) expression -> forall_header . IN expression COLON action_statement

    IN              shift and go to state 89


state 48

    (56) expression -> NEWEVENT . CNAME dictvalue

    CNAME           shift and go to state 90


state 49

    (42) expression -> TRUE .

    COMMA           reduce using rule 42 (expression -> TRUE .)
    POINT           reduce using rule 42 (expression -> TRUE .)
    LSBRACK         reduce using rule 42 (expression -> TRUE .)
    COMPARE         reduce using rule 42 (expression -> TRUE .)
    OR              reduce using rule 42 (expression -> TRUE .)
    AND             reduce using rule 42 (expression -> TRUE .)
    IN              reduce using rule 42 (expression -> TRUE .)
    MODULO          reduce using rule 42 (expression -> TRUE .)
    PLUS            reduce using rule 42 (expression -> TRUE .)
    MINUS           reduce using rule 42 (expression -> TRUE .)
    TIMDIV          reduce using rule 42 (expression -> TRUE .)
    RCBRACK         reduce using rule 42 (expression -> TRUE .)
    NEWLINE         reduce using rule 42 (expression -> TRUE .)
    ELSE            reduce using rule 42 (expression -> TRUE .)
    RSBRACK         reduce using rule 42 (expression -> TRUE .)
    THEN            reduce using rule 42 (expression -> TRUE .)
    RPAREN          reduce using rule 42 (expression -> TRUE .)
    COLON           reduce using rule 42 (expression -> TRUE .)


state 50

    (49) expression -> dictvalue .

    COMMA           reduce using rule 49 (expression -> dictvalue .)
    POINT           reduce using rule 49 (expression -> dictvalue .)
    LSBRACK         reduce using rule 49 (expression -> dictvalue .)
    COMPARE         reduce using rule 49 (expression -> dictvalue .)
    OR              reduce using rule 49 (expression -> dictvalue .)
    AND             reduce using rule 49 (expression -> dictvalue .)
    IN              reduce using rule 49 (expression -> dictvalue .)
    MODULO          reduce using rule 49 (expression -> dictvalue .)
    PLUS            reduce using rule 49 (expression -> dictvalue .)
    MINUS           reduce using rule 49 (expression -> dictvalue .)
    TIMDIV          reduce using rule 49 (expression -> dictvalue .)
    RCBRACK         reduce using rule 49 (expression -> dictvalue .)
    NEWLINE         reduce using rule 49 (expression -> dictvalue .)
    ELSE            reduce using rule 49 (expression -> dictvalue .)
    RSBRACK         reduce using rule 49 (expression -> dictvalue .)
    THEN            reduce using rule 49 (expression -> dictvalue .)
    RPAREN          reduce using rule 49 (expression -> dictvalue .)
    COLON           reduce using rule 49 (expression -> dictvalue .)


state 51

    (68) expression -> IF . expression THEN action_statement ELSE action_statement
    (29) expression -> . expression POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> . expression POINT CNAME LPAREN RPAREN
    (31) expression -> . expression POINT CNAME
    (32) expression -> . CNAME LPAREN expressionlist RPAREN
    (33) expression -> . CNAME LPAREN RPAREN
    (36) expression -> . expression LSBRACK expression RSBRACK
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . CNAME
    (39) expression -> . NUMBER
    (40) expression -> . MINUS expression
    (41) expression -> . stringval
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . NONE
    (45) expression -> . LSBRACK listitems RSBRACK
    (46) expression -> . LSBRACK RSBRACK
    (49) expression -> . dictvalue
    (56) expression -> . NEWEVENT CNAME dictvalue
    (59) expression -> . expression COMPARE expression
    (60) expression -> . NOT expression
    (61) expression -> . expression OR expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression IN expression
    (64) expression -> . expression MODULO expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression TIMDIV expression
    (68) expression -> . IF expression THEN action_statement ELSE action_statement
    (70) expression -> . forall_header IN expression COLON action_statement
    (71) stringval -> . STRING
    (50) dictvalue -> . LCBRACK dictitems RCBRACK
    (51) dictvalue -> . LCBRACK RCBRACK
    (69) forall_header -> . FORALL CNAME

    CNAME           shift and go to state 54
    LPAREN          shift and go to state 58
    NUMBER          shift and go to state 56
    MINUS           shift and go to state 55
    TRUE            shift and go to state 49
    FALSE           shift and go to state 52
    NONE            shift and go to state 45
    LSBRACK         shift and go to state 59
    NEWEVENT        shift and go to state 48
    NOT             shift and go to state 57
    IF              shift and go to state 51
    STRING          shift and go to state 22
    LCBRACK         shift and go to state 36
    FORALL          shift and go to state 53

    expression                     shift and go to state 91
    stringval                      shift and go to state 46
    dictvalue                      shift and go to state 50
    forall_header                  shift and go to state 47

state 52

    (43) expression -> FALSE .

    COMMA           reduce using rule 43 (expression -> FALSE .)
    POINT           reduce using rule 43 (expression -> FALSE .)
    LSBRACK         reduce using rule 43 (expression -> FALSE .)
    COMPARE         reduce using rule 43 (expression -> FALSE .)
    OR              reduce using rule 43 (expression -> FALSE .)
    AND             reduce using rule 43 (expression -> FALSE .)
    IN              reduce using rule 43 (expression -> FALSE .)
    MODULO          reduce using rule 43 (expression -> FALSE .)
    PLUS            reduce using rule 43 (expression -> FALSE .)
    MINUS           reduce using rule 43 (expression -> FALSE .)
    TIMDIV          reduce using rule 43 (expression -> FALSE .)
    RCBRACK         reduce using rule 43 (expression -> FALSE .)
    NEWLINE         reduce using rule 43 (expression -> FALSE .)
    ELSE            reduce using rule 43 (expression -> FALSE .)
    RSBRACK         reduce using rule 43 (expression -> FALSE .)
    THEN            reduce using rule 43 (expression -> FALSE .)
    RPAREN          reduce using rule 43 (expression -> FALSE .)
    COLON           reduce using rule 43 (expression -> FALSE .)


state 53

    (69) forall_header -> FORALL . CNAME

    CNAME           shift and go to state 92


state 54

    (32) expression -> CNAME . LPAREN expressionlist RPAREN
    (33) expression -> CNAME . LPAREN RPAREN
    (38) expression -> CNAME .

    LPAREN          shift and go to state 93
    COMMA           reduce using rule 38 (expression -> CNAME .)
    POINT           reduce using rule 38 (expression -> CNAME .)
    LSBRACK         reduce using rule 38 (expression -> CNAME .)
    COMPARE         reduce using rule 38 (expression -> CNAME .)
    OR              reduce using rule 38 (expression -> CNAME .)
    AND             reduce using rule 38 (expression -> CNAME .)
    IN              reduce using rule 38 (expression -> CNAME .)
    MODULO          reduce using rule 38 (expression -> CNAME .)
    PLUS            reduce using rule 38 (expression -> CNAME .)
    MINUS           reduce using rule 38 (expression -> CNAME .)
    TIMDIV          reduce using rule 38 (expression -> CNAME .)
    RCBRACK         reduce using rule 38 (expression -> CNAME .)
    THEN            reduce using rule 38 (expression -> CNAME .)
    RSBRACK         reduce using rule 38 (expression -> CNAME .)
    NEWLINE         reduce using rule 38 (expression -> CNAME .)
    ELSE            reduce using rule 38 (expression -> CNAME .)
    RPAREN          reduce using rule 38 (expression -> CNAME .)
    COLON           reduce using rule 38 (expression -> CNAME .)


state 55

    (40) expression -> MINUS . expression
    (29) expression -> . expression POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> . expression POINT CNAME LPAREN RPAREN
    (31) expression -> . expression POINT CNAME
    (32) expression -> . CNAME LPAREN expressionlist RPAREN
    (33) expression -> . CNAME LPAREN RPAREN
    (36) expression -> . expression LSBRACK expression RSBRACK
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . CNAME
    (39) expression -> . NUMBER
    (40) expression -> . MINUS expression
    (41) expression -> . stringval
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . NONE
    (45) expression -> . LSBRACK listitems RSBRACK
    (46) expression -> . LSBRACK RSBRACK
    (49) expression -> . dictvalue
    (56) expression -> . NEWEVENT CNAME dictvalue
    (59) expression -> . expression COMPARE expression
    (60) expression -> . NOT expression
    (61) expression -> . expression OR expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression IN expression
    (64) expression -> . expression MODULO expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression TIMDIV expression
    (68) expression -> . IF expression THEN action_statement ELSE action_statement
    (70) expression -> . forall_header IN expression COLON action_statement
    (71) stringval -> . STRING
    (50) dictvalue -> . LCBRACK dictitems RCBRACK
    (51) dictvalue -> . LCBRACK RCBRACK
    (69) forall_header -> . FORALL CNAME

    CNAME           shift and go to state 54
    LPAREN          shift and go to state 58
    NUMBER          shift and go to state 56
    MINUS           shift and go to state 55
    TRUE            shift and go to state 49
    FALSE           shift and go to state 52
    NONE            shift and go to state 45
    LSBRACK         shift and go to state 59
    NEWEVENT        shift and go to state 48
    NOT             shift and go to state 57
    IF              shift and go to state 51
    STRING          shift and go to state 22
    LCBRACK         shift and go to state 36
    FORALL          shift and go to state 53

    expression                     shift and go to state 94
    stringval                      shift and go to state 46
    dictvalue                      shift and go to state 50
    forall_header                  shift and go to state 47

state 56

    (39) expression -> NUMBER .

    COMMA           reduce using rule 39 (expression -> NUMBER .)
    POINT           reduce using rule 39 (expression -> NUMBER .)
    LSBRACK         reduce using rule 39 (expression -> NUMBER .)
    COMPARE         reduce using rule 39 (expression -> NUMBER .)
    OR              reduce using rule 39 (expression -> NUMBER .)
    AND             reduce using rule 39 (expression -> NUMBER .)
    IN              reduce using rule 39 (expression -> NUMBER .)
    MODULO          reduce using rule 39 (expression -> NUMBER .)
    PLUS            reduce using rule 39 (expression -> NUMBER .)
    MINUS           reduce using rule 39 (expression -> NUMBER .)
    TIMDIV          reduce using rule 39 (expression -> NUMBER .)
    RCBRACK         reduce using rule 39 (expression -> NUMBER .)
    NEWLINE         reduce using rule 39 (expression -> NUMBER .)
    ELSE            reduce using rule 39 (expression -> NUMBER .)
    RSBRACK         reduce using rule 39 (expression -> NUMBER .)
    THEN            reduce using rule 39 (expression -> NUMBER .)
    RPAREN          reduce using rule 39 (expression -> NUMBER .)
    COLON           reduce using rule 39 (expression -> NUMBER .)


state 57

    (60) expression -> NOT . expression
    (29) expression -> . expression POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> . expression POINT CNAME LPAREN RPAREN
    (31) expression -> . expression POINT CNAME
    (32) expression -> . CNAME LPAREN expressionlist RPAREN
    (33) expression -> . CNAME LPAREN RPAREN
    (36) expression -> . expression LSBRACK expression RSBRACK
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . CNAME
    (39) expression -> . NUMBER
    (40) expression -> . MINUS expression
    (41) expression -> . stringval
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . NONE
    (45) expression -> . LSBRACK listitems RSBRACK
    (46) expression -> . LSBRACK RSBRACK
    (49) expression -> . dictvalue
    (56) expression -> . NEWEVENT CNAME dictvalue
    (59) expression -> . expression COMPARE expression
    (60) expression -> . NOT expression
    (61) expression -> . expression OR expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression IN expression
    (64) expression -> . expression MODULO expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression TIMDIV expression
    (68) expression -> . IF expression THEN action_statement ELSE action_statement
    (70) expression -> . forall_header IN expression COLON action_statement
    (71) stringval -> . STRING
    (50) dictvalue -> . LCBRACK dictitems RCBRACK
    (51) dictvalue -> . LCBRACK RCBRACK
    (69) forall_header -> . FORALL CNAME

    CNAME           shift and go to state 54
    LPAREN          shift and go to state 58
    NUMBER          shift and go to state 56
    MINUS           shift and go to state 55
    TRUE            shift and go to state 49
    FALSE           shift and go to state 52
    NONE            shift and go to state 45
    LSBRACK         shift and go to state 59
    NEWEVENT        shift and go to state 48
    NOT             shift and go to state 57
    IF              shift and go to state 51
    STRING          shift and go to state 22
    LCBRACK         shift and go to state 36
    FORALL          shift and go to state 53

    expression                     shift and go to state 95
    stringval                      shift and go to state 46
    dictvalue                      shift and go to state 50
    forall_header                  shift and go to state 47

state 58

    (37) expression -> LPAREN . expression RPAREN
    (29) expression -> . expression POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> . expression POINT CNAME LPAREN RPAREN
    (31) expression -> . expression POINT CNAME
    (32) expression -> . CNAME LPAREN expressionlist RPAREN
    (33) expression -> . CNAME LPAREN RPAREN
    (36) expression -> . expression LSBRACK expression RSBRACK
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . CNAME
    (39) expression -> . NUMBER
    (40) expression -> . MINUS expression
    (41) expression -> . stringval
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . NONE
    (45) expression -> . LSBRACK listitems RSBRACK
    (46) expression -> . LSBRACK RSBRACK
    (49) expression -> . dictvalue
    (56) expression -> . NEWEVENT CNAME dictvalue
    (59) expression -> . expression COMPARE expression
    (60) expression -> . NOT expression
    (61) expression -> . expression OR expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression IN expression
    (64) expression -> . expression MODULO expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression TIMDIV expression
    (68) expression -> . IF expression THEN action_statement ELSE action_statement
    (70) expression -> . forall_header IN expression COLON action_statement
    (71) stringval -> . STRING
    (50) dictvalue -> . LCBRACK dictitems RCBRACK
    (51) dictvalue -> . LCBRACK RCBRACK
    (69) forall_header -> . FORALL CNAME

    CNAME           shift and go to state 54
    LPAREN          shift and go to state 58
    NUMBER          shift and go to state 56
    MINUS           shift and go to state 55
    TRUE            shift and go to state 49
    FALSE           shift and go to state 52
    NONE            shift and go to state 45
    LSBRACK         shift and go to state 59
    NEWEVENT        shift and go to state 48
    NOT             shift and go to state 57
    IF              shift and go to state 51
    STRING          shift and go to state 22
    LCBRACK         shift and go to state 36
    FORALL          shift and go to state 53

    expression                     shift and go to state 96
    stringval                      shift and go to state 46
    dictvalue                      shift and go to state 50
    forall_header                  shift and go to state 47

state 59

    (45) expression -> LSBRACK . listitems RSBRACK
    (46) expression -> LSBRACK . RSBRACK
    (47) listitems -> . expression
    (48) listitems -> . expression COMMA listitems
    (29) expression -> . expression POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> . expression POINT CNAME LPAREN RPAREN
    (31) expression -> . expression POINT CNAME
    (32) expression -> . CNAME LPAREN expressionlist RPAREN
    (33) expression -> . CNAME LPAREN RPAREN
    (36) expression -> . expression LSBRACK expression RSBRACK
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . CNAME
    (39) expression -> . NUMBER
    (40) expression -> . MINUS expression
    (41) expression -> . stringval
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . NONE
    (45) expression -> . LSBRACK listitems RSBRACK
    (46) expression -> . LSBRACK RSBRACK
    (49) expression -> . dictvalue
    (56) expression -> . NEWEVENT CNAME dictvalue
    (59) expression -> . expression COMPARE expression
    (60) expression -> . NOT expression
    (61) expression -> . expression OR expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression IN expression
    (64) expression -> . expression MODULO expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression TIMDIV expression
    (68) expression -> . IF expression THEN action_statement ELSE action_statement
    (70) expression -> . forall_header IN expression COLON action_statement
    (71) stringval -> . STRING
    (50) dictvalue -> . LCBRACK dictitems RCBRACK
    (51) dictvalue -> . LCBRACK RCBRACK
    (69) forall_header -> . FORALL CNAME

    RSBRACK         shift and go to state 98
    CNAME           shift and go to state 54
    LPAREN          shift and go to state 58
    NUMBER          shift and go to state 56
    MINUS           shift and go to state 55
    TRUE            shift and go to state 49
    FALSE           shift and go to state 52
    NONE            shift and go to state 45
    LSBRACK         shift and go to state 59
    NEWEVENT        shift and go to state 48
    NOT             shift and go to state 57
    IF              shift and go to state 51
    STRING          shift and go to state 22
    LCBRACK         shift and go to state 36
    FORALL          shift and go to state 53

    expression                     shift and go to state 97
    stringval                      shift and go to state 46
    listitems                      shift and go to state 99
    dictvalue                      shift and go to state 50
    forall_header                  shift and go to state 47

state 60

    (57) assign -> CNAME EQUALS expression .
    (29) expression -> expression . POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> expression . POINT CNAME LPAREN RPAREN
    (31) expression -> expression . POINT CNAME
    (36) expression -> expression . LSBRACK expression RSBRACK
    (59) expression -> expression . COMPARE expression
    (61) expression -> expression . OR expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . IN expression
    (64) expression -> expression . MODULO expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . TIMDIV expression

  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for LSBRACK resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMDIV resolved as shift
    NEWLINE         reduce using rule 57 (assign -> CNAME EQUALS expression .)
    ELSE            reduce using rule 57 (assign -> CNAME EQUALS expression .)
    RSBRACK         reduce using rule 57 (assign -> CNAME EQUALS expression .)
    THEN            reduce using rule 57 (assign -> CNAME EQUALS expression .)
    RPAREN          reduce using rule 57 (assign -> CNAME EQUALS expression .)
    COMMA           reduce using rule 57 (assign -> CNAME EQUALS expression .)
    COLON           reduce using rule 57 (assign -> CNAME EQUALS expression .)
    RCBRACK         reduce using rule 57 (assign -> CNAME EQUALS expression .)
    POINT           shift and go to state 84
    LSBRACK         shift and go to state 85
    COMPARE         shift and go to state 81
    OR              shift and go to state 88
    AND             shift and go to state 78
    IN              shift and go to state 83
    MODULO          shift and go to state 87
    PLUS            shift and go to state 86
    MINUS           shift and go to state 80
    TIMDIV          shift and go to state 79

  ! POINT           [ reduce using rule 57 (assign -> CNAME EQUALS expression .) ]
  ! LSBRACK         [ reduce using rule 57 (assign -> CNAME EQUALS expression .) ]
  ! COMPARE         [ reduce using rule 57 (assign -> CNAME EQUALS expression .) ]
  ! OR              [ reduce using rule 57 (assign -> CNAME EQUALS expression .) ]
  ! AND             [ reduce using rule 57 (assign -> CNAME EQUALS expression .) ]
  ! IN              [ reduce using rule 57 (assign -> CNAME EQUALS expression .) ]
  ! MODULO          [ reduce using rule 57 (assign -> CNAME EQUALS expression .) ]
  ! PLUS            [ reduce using rule 57 (assign -> CNAME EQUALS expression .) ]
  ! MINUS           [ reduce using rule 57 (assign -> CNAME EQUALS expression .) ]
  ! TIMDIV          [ reduce using rule 57 (assign -> CNAME EQUALS expression .) ]


state 61

    (58) assign -> CNAME LSBRACK expression . RSBRACK EQUALS expression
    (29) expression -> expression . POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> expression . POINT CNAME LPAREN RPAREN
    (31) expression -> expression . POINT CNAME
    (36) expression -> expression . LSBRACK expression RSBRACK
    (59) expression -> expression . COMPARE expression
    (61) expression -> expression . OR expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . IN expression
    (64) expression -> expression . MODULO expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . TIMDIV expression

    RSBRACK         shift and go to state 100
    POINT           shift and go to state 84
    LSBRACK         shift and go to state 85
    COMPARE         shift and go to state 81
    OR              shift and go to state 88
    AND             shift and go to state 78
    IN              shift and go to state 83
    MODULO          shift and go to state 87
    PLUS            shift and go to state 86
    MINUS           shift and go to state 80
    TIMDIV          shift and go to state 79


state 62

    (52) dicttag -> CNAME .

    COLON           reduce using rule 52 (dicttag -> CNAME .)


state 63

    (54) dictitems -> dicttag . COLON expression
    (55) dictitems -> dicttag . COLON expression COMMA dictitems

    COLON           shift and go to state 101


state 64

    (53) dicttag -> stringval .

    COLON           reduce using rule 53 (dicttag -> stringval .)


state 65

    (51) dictvalue -> LCBRACK RCBRACK .

    POINT           reduce using rule 51 (dictvalue -> LCBRACK RCBRACK .)
    LSBRACK         reduce using rule 51 (dictvalue -> LCBRACK RCBRACK .)
    COMPARE         reduce using rule 51 (dictvalue -> LCBRACK RCBRACK .)
    OR              reduce using rule 51 (dictvalue -> LCBRACK RCBRACK .)
    AND             reduce using rule 51 (dictvalue -> LCBRACK RCBRACK .)
    IN              reduce using rule 51 (dictvalue -> LCBRACK RCBRACK .)
    MODULO          reduce using rule 51 (dictvalue -> LCBRACK RCBRACK .)
    PLUS            reduce using rule 51 (dictvalue -> LCBRACK RCBRACK .)
    MINUS           reduce using rule 51 (dictvalue -> LCBRACK RCBRACK .)
    TIMDIV          reduce using rule 51 (dictvalue -> LCBRACK RCBRACK .)
    NEWLINE         reduce using rule 51 (dictvalue -> LCBRACK RCBRACK .)
    ELSE            reduce using rule 51 (dictvalue -> LCBRACK RCBRACK .)
    RSBRACK         reduce using rule 51 (dictvalue -> LCBRACK RCBRACK .)
    THEN            reduce using rule 51 (dictvalue -> LCBRACK RCBRACK .)
    RPAREN          reduce using rule 51 (dictvalue -> LCBRACK RCBRACK .)
    COMMA           reduce using rule 51 (dictvalue -> LCBRACK RCBRACK .)
    COLON           reduce using rule 51 (dictvalue -> LCBRACK RCBRACK .)
    RCBRACK         reduce using rule 51 (dictvalue -> LCBRACK RCBRACK .)


state 66

    (50) dictvalue -> LCBRACK dictitems . RCBRACK

    RCBRACK         shift and go to state 102


state 67

    (13) celldef -> CELL stringval GADGET stringval . OPTIONS dictvalue NEWLINE

    OPTIONS         shift and go to state 103


state 68

    (14) celldef -> CELL stringval dictvalue NEWLINE .

    NEWLINE         reduce using rule 14 (celldef -> CELL stringval dictvalue NEWLINE .)
    IMPORT          reduce using rule 14 (celldef -> CELL stringval dictvalue NEWLINE .)
    CONSTANT        reduce using rule 14 (celldef -> CELL stringval dictvalue NEWLINE .)
    DECLARE         reduce using rule 14 (celldef -> CELL stringval dictvalue NEWLINE .)
    CELL            reduce using rule 14 (celldef -> CELL stringval dictvalue NEWLINE .)
    RULE            reduce using rule 14 (celldef -> CELL stringval dictvalue NEWLINE .)
    EVENT           reduce using rule 14 (celldef -> CELL stringval dictvalue NEWLINE .)


state 69

    (72) newline -> NEWLINE .
    (73) newline -> NEWLINE . newline
    (72) newline -> . NEWLINE
    (73) newline -> . NEWLINE newline

  ! shift/reduce conflict for NEWLINE resolved as shift
    CNAME           reduce using rule 72 (newline -> NEWLINE .)
    LPAREN          reduce using rule 72 (newline -> NEWLINE .)
    NUMBER          reduce using rule 72 (newline -> NEWLINE .)
    MINUS           reduce using rule 72 (newline -> NEWLINE .)
    TRUE            reduce using rule 72 (newline -> NEWLINE .)
    FALSE           reduce using rule 72 (newline -> NEWLINE .)
    NONE            reduce using rule 72 (newline -> NEWLINE .)
    LSBRACK         reduce using rule 72 (newline -> NEWLINE .)
    NEWEVENT        reduce using rule 72 (newline -> NEWLINE .)
    NOT             reduce using rule 72 (newline -> NEWLINE .)
    IF              reduce using rule 72 (newline -> NEWLINE .)
    STRING          reduce using rule 72 (newline -> NEWLINE .)
    LCBRACK         reduce using rule 72 (newline -> NEWLINE .)
    FORALL          reduce using rule 72 (newline -> NEWLINE .)
    IMPORT          reduce using rule 72 (newline -> NEWLINE .)
    CONSTANT        reduce using rule 72 (newline -> NEWLINE .)
    DECLARE         reduce using rule 72 (newline -> NEWLINE .)
    CELL            reduce using rule 72 (newline -> NEWLINE .)
    RULE            reduce using rule 72 (newline -> NEWLINE .)
    EVENT           reduce using rule 72 (newline -> NEWLINE .)
    $end            reduce using rule 72 (newline -> NEWLINE .)
    ACTION          reduce using rule 72 (newline -> NEWLINE .)
    CONDITION       reduce using rule 72 (newline -> NEWLINE .)
    NEWLINE         shift and go to state 69

  ! NEWLINE         [ reduce using rule 72 (newline -> NEWLINE .) ]

    newline                        shift and go to state 104

state 70

    (22) event -> EVENT CNAME newline .

    ACTION          reduce using rule 22 (event -> EVENT CNAME newline .)
    CONDITION       reduce using rule 22 (event -> EVENT CNAME newline .)


state 71

    (25) action_statement -> expression .
    (29) expression -> expression . POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> expression . POINT CNAME LPAREN RPAREN
    (31) expression -> expression . POINT CNAME
    (36) expression -> expression . LSBRACK expression RSBRACK
    (59) expression -> expression . COMPARE expression
    (61) expression -> expression . OR expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . IN expression
    (64) expression -> expression . MODULO expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . TIMDIV expression

  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for LSBRACK resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMDIV resolved as shift
    NEWLINE         reduce using rule 25 (action_statement -> expression .)
    ELSE            reduce using rule 25 (action_statement -> expression .)
    RSBRACK         reduce using rule 25 (action_statement -> expression .)
    THEN            reduce using rule 25 (action_statement -> expression .)
    RPAREN          reduce using rule 25 (action_statement -> expression .)
    COMMA           reduce using rule 25 (action_statement -> expression .)
    COLON           reduce using rule 25 (action_statement -> expression .)
    RCBRACK         reduce using rule 25 (action_statement -> expression .)
    POINT           shift and go to state 84
    LSBRACK         shift and go to state 85
    COMPARE         shift and go to state 81
    OR              shift and go to state 88
    AND             shift and go to state 78
    IN              shift and go to state 83
    MODULO          shift and go to state 87
    PLUS            shift and go to state 86
    MINUS           shift and go to state 80
    TIMDIV          shift and go to state 79

  ! POINT           [ reduce using rule 25 (action_statement -> expression .) ]
  ! LSBRACK         [ reduce using rule 25 (action_statement -> expression .) ]
  ! COMPARE         [ reduce using rule 25 (action_statement -> expression .) ]
  ! OR              [ reduce using rule 25 (action_statement -> expression .) ]
  ! AND             [ reduce using rule 25 (action_statement -> expression .) ]
  ! IN              [ reduce using rule 25 (action_statement -> expression .) ]
  ! MODULO          [ reduce using rule 25 (action_statement -> expression .) ]
  ! PLUS            [ reduce using rule 25 (action_statement -> expression .) ]
  ! MINUS           [ reduce using rule 25 (action_statement -> expression .) ]
  ! TIMDIV          [ reduce using rule 25 (action_statement -> expression .) ]


state 72

    (27) calls -> action_statement . newline
    (28) calls -> action_statement . newline calls
    (72) newline -> . NEWLINE
    (73) newline -> . NEWLINE newline

    NEWLINE         shift and go to state 69

    newline                        shift and go to state 105

state 73

    (24) action -> ACTION calls .

    NEWLINE         reduce using rule 24 (action -> ACTION calls .)
    IMPORT          reduce using rule 24 (action -> ACTION calls .)
    CONSTANT        reduce using rule 24 (action -> ACTION calls .)
    DECLARE         reduce using rule 24 (action -> ACTION calls .)
    CELL            reduce using rule 24 (action -> ACTION calls .)
    RULE            reduce using rule 24 (action -> ACTION calls .)
    EVENT           reduce using rule 24 (action -> ACTION calls .)
    $end            reduce using rule 24 (action -> ACTION calls .)


state 74

    (32) expression -> CNAME . LPAREN expressionlist RPAREN
    (33) expression -> CNAME . LPAREN RPAREN
    (38) expression -> CNAME .
    (57) assign -> CNAME . EQUALS expression
    (58) assign -> CNAME . LSBRACK expression RSBRACK EQUALS expression

  ! shift/reduce conflict for LSBRACK resolved as shift
    LPAREN          shift and go to state 93
    POINT           reduce using rule 38 (expression -> CNAME .)
    COMPARE         reduce using rule 38 (expression -> CNAME .)
    OR              reduce using rule 38 (expression -> CNAME .)
    AND             reduce using rule 38 (expression -> CNAME .)
    IN              reduce using rule 38 (expression -> CNAME .)
    MODULO          reduce using rule 38 (expression -> CNAME .)
    PLUS            reduce using rule 38 (expression -> CNAME .)
    MINUS           reduce using rule 38 (expression -> CNAME .)
    TIMDIV          reduce using rule 38 (expression -> CNAME .)
    NEWLINE         reduce using rule 38 (expression -> CNAME .)
    ELSE            reduce using rule 38 (expression -> CNAME .)
    RSBRACK         reduce using rule 38 (expression -> CNAME .)
    THEN            reduce using rule 38 (expression -> CNAME .)
    RPAREN          reduce using rule 38 (expression -> CNAME .)
    COMMA           reduce using rule 38 (expression -> CNAME .)
    COLON           reduce using rule 38 (expression -> CNAME .)
    RCBRACK         reduce using rule 38 (expression -> CNAME .)
    EQUALS          shift and go to state 32
    LSBRACK         shift and go to state 34

  ! LSBRACK         [ reduce using rule 38 (expression -> CNAME .) ]


state 75

    (26) action_statement -> assign .

    POINT           reduce using rule 26 (action_statement -> assign .)
    LSBRACK         reduce using rule 26 (action_statement -> assign .)
    COMPARE         reduce using rule 26 (action_statement -> assign .)
    OR              reduce using rule 26 (action_statement -> assign .)
    AND             reduce using rule 26 (action_statement -> assign .)
    IN              reduce using rule 26 (action_statement -> assign .)
    MODULO          reduce using rule 26 (action_statement -> assign .)
    PLUS            reduce using rule 26 (action_statement -> assign .)
    MINUS           reduce using rule 26 (action_statement -> assign .)
    TIMDIV          reduce using rule 26 (action_statement -> assign .)
    NEWLINE         reduce using rule 26 (action_statement -> assign .)
    ELSE            reduce using rule 26 (action_statement -> assign .)
    RSBRACK         reduce using rule 26 (action_statement -> assign .)
    THEN            reduce using rule 26 (action_statement -> assign .)
    RPAREN          reduce using rule 26 (action_statement -> assign .)
    COMMA           reduce using rule 26 (action_statement -> assign .)
    COLON           reduce using rule 26 (action_statement -> assign .)
    RCBRACK         reduce using rule 26 (action_statement -> assign .)


state 76

    (23) condition -> CONDITION expression . newline
    (29) expression -> expression . POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> expression . POINT CNAME LPAREN RPAREN
    (31) expression -> expression . POINT CNAME
    (36) expression -> expression . LSBRACK expression RSBRACK
    (59) expression -> expression . COMPARE expression
    (61) expression -> expression . OR expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . IN expression
    (64) expression -> expression . MODULO expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . TIMDIV expression
    (72) newline -> . NEWLINE
    (73) newline -> . NEWLINE newline

    POINT           shift and go to state 84
    LSBRACK         shift and go to state 85
    COMPARE         shift and go to state 81
    OR              shift and go to state 88
    AND             shift and go to state 78
    IN              shift and go to state 83
    MODULO          shift and go to state 87
    PLUS            shift and go to state 86
    MINUS           shift and go to state 80
    TIMDIV          shift and go to state 79
    NEWLINE         shift and go to state 69

    newline                        shift and go to state 106

state 77

    (21) ecarule -> opt_rulename event condition action .

    NEWLINE         reduce using rule 21 (ecarule -> opt_rulename event condition action .)
    IMPORT          reduce using rule 21 (ecarule -> opt_rulename event condition action .)
    CONSTANT        reduce using rule 21 (ecarule -> opt_rulename event condition action .)
    DECLARE         reduce using rule 21 (ecarule -> opt_rulename event condition action .)
    CELL            reduce using rule 21 (ecarule -> opt_rulename event condition action .)
    RULE            reduce using rule 21 (ecarule -> opt_rulename event condition action .)
    EVENT           reduce using rule 21 (ecarule -> opt_rulename event condition action .)
    $end            reduce using rule 21 (ecarule -> opt_rulename event condition action .)


state 78

    (62) expression -> expression AND . expression
    (29) expression -> . expression POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> . expression POINT CNAME LPAREN RPAREN
    (31) expression -> . expression POINT CNAME
    (32) expression -> . CNAME LPAREN expressionlist RPAREN
    (33) expression -> . CNAME LPAREN RPAREN
    (36) expression -> . expression LSBRACK expression RSBRACK
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . CNAME
    (39) expression -> . NUMBER
    (40) expression -> . MINUS expression
    (41) expression -> . stringval
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . NONE
    (45) expression -> . LSBRACK listitems RSBRACK
    (46) expression -> . LSBRACK RSBRACK
    (49) expression -> . dictvalue
    (56) expression -> . NEWEVENT CNAME dictvalue
    (59) expression -> . expression COMPARE expression
    (60) expression -> . NOT expression
    (61) expression -> . expression OR expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression IN expression
    (64) expression -> . expression MODULO expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression TIMDIV expression
    (68) expression -> . IF expression THEN action_statement ELSE action_statement
    (70) expression -> . forall_header IN expression COLON action_statement
    (71) stringval -> . STRING
    (50) dictvalue -> . LCBRACK dictitems RCBRACK
    (51) dictvalue -> . LCBRACK RCBRACK
    (69) forall_header -> . FORALL CNAME

    CNAME           shift and go to state 54
    LPAREN          shift and go to state 58
    NUMBER          shift and go to state 56
    MINUS           shift and go to state 55
    TRUE            shift and go to state 49
    FALSE           shift and go to state 52
    NONE            shift and go to state 45
    LSBRACK         shift and go to state 59
    NEWEVENT        shift and go to state 48
    NOT             shift and go to state 57
    IF              shift and go to state 51
    STRING          shift and go to state 22
    LCBRACK         shift and go to state 36
    FORALL          shift and go to state 53

    expression                     shift and go to state 107
    stringval                      shift and go to state 46
    dictvalue                      shift and go to state 50
    forall_header                  shift and go to state 47

state 79

    (67) expression -> expression TIMDIV . expression
    (29) expression -> . expression POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> . expression POINT CNAME LPAREN RPAREN
    (31) expression -> . expression POINT CNAME
    (32) expression -> . CNAME LPAREN expressionlist RPAREN
    (33) expression -> . CNAME LPAREN RPAREN
    (36) expression -> . expression LSBRACK expression RSBRACK
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . CNAME
    (39) expression -> . NUMBER
    (40) expression -> . MINUS expression
    (41) expression -> . stringval
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . NONE
    (45) expression -> . LSBRACK listitems RSBRACK
    (46) expression -> . LSBRACK RSBRACK
    (49) expression -> . dictvalue
    (56) expression -> . NEWEVENT CNAME dictvalue
    (59) expression -> . expression COMPARE expression
    (60) expression -> . NOT expression
    (61) expression -> . expression OR expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression IN expression
    (64) expression -> . expression MODULO expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression TIMDIV expression
    (68) expression -> . IF expression THEN action_statement ELSE action_statement
    (70) expression -> . forall_header IN expression COLON action_statement
    (71) stringval -> . STRING
    (50) dictvalue -> . LCBRACK dictitems RCBRACK
    (51) dictvalue -> . LCBRACK RCBRACK
    (69) forall_header -> . FORALL CNAME

    CNAME           shift and go to state 54
    LPAREN          shift and go to state 58
    NUMBER          shift and go to state 56
    MINUS           shift and go to state 55
    TRUE            shift and go to state 49
    FALSE           shift and go to state 52
    NONE            shift and go to state 45
    LSBRACK         shift and go to state 59
    NEWEVENT        shift and go to state 48
    NOT             shift and go to state 57
    IF              shift and go to state 51
    STRING          shift and go to state 22
    LCBRACK         shift and go to state 36
    FORALL          shift and go to state 53

    expression                     shift and go to state 108
    stringval                      shift and go to state 46
    dictvalue                      shift and go to state 50
    forall_header                  shift and go to state 47

state 80

    (66) expression -> expression MINUS . expression
    (29) expression -> . expression POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> . expression POINT CNAME LPAREN RPAREN
    (31) expression -> . expression POINT CNAME
    (32) expression -> . CNAME LPAREN expressionlist RPAREN
    (33) expression -> . CNAME LPAREN RPAREN
    (36) expression -> . expression LSBRACK expression RSBRACK
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . CNAME
    (39) expression -> . NUMBER
    (40) expression -> . MINUS expression
    (41) expression -> . stringval
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . NONE
    (45) expression -> . LSBRACK listitems RSBRACK
    (46) expression -> . LSBRACK RSBRACK
    (49) expression -> . dictvalue
    (56) expression -> . NEWEVENT CNAME dictvalue
    (59) expression -> . expression COMPARE expression
    (60) expression -> . NOT expression
    (61) expression -> . expression OR expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression IN expression
    (64) expression -> . expression MODULO expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression TIMDIV expression
    (68) expression -> . IF expression THEN action_statement ELSE action_statement
    (70) expression -> . forall_header IN expression COLON action_statement
    (71) stringval -> . STRING
    (50) dictvalue -> . LCBRACK dictitems RCBRACK
    (51) dictvalue -> . LCBRACK RCBRACK
    (69) forall_header -> . FORALL CNAME

    CNAME           shift and go to state 54
    LPAREN          shift and go to state 58
    NUMBER          shift and go to state 56
    MINUS           shift and go to state 55
    TRUE            shift and go to state 49
    FALSE           shift and go to state 52
    NONE            shift and go to state 45
    LSBRACK         shift and go to state 59
    NEWEVENT        shift and go to state 48
    NOT             shift and go to state 57
    IF              shift and go to state 51
    STRING          shift and go to state 22
    LCBRACK         shift and go to state 36
    FORALL          shift and go to state 53

    expression                     shift and go to state 109
    stringval                      shift and go to state 46
    dictvalue                      shift and go to state 50
    forall_header                  shift and go to state 47

state 81

    (59) expression -> expression COMPARE . expression
    (29) expression -> . expression POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> . expression POINT CNAME LPAREN RPAREN
    (31) expression -> . expression POINT CNAME
    (32) expression -> . CNAME LPAREN expressionlist RPAREN
    (33) expression -> . CNAME LPAREN RPAREN
    (36) expression -> . expression LSBRACK expression RSBRACK
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . CNAME
    (39) expression -> . NUMBER
    (40) expression -> . MINUS expression
    (41) expression -> . stringval
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . NONE
    (45) expression -> . LSBRACK listitems RSBRACK
    (46) expression -> . LSBRACK RSBRACK
    (49) expression -> . dictvalue
    (56) expression -> . NEWEVENT CNAME dictvalue
    (59) expression -> . expression COMPARE expression
    (60) expression -> . NOT expression
    (61) expression -> . expression OR expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression IN expression
    (64) expression -> . expression MODULO expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression TIMDIV expression
    (68) expression -> . IF expression THEN action_statement ELSE action_statement
    (70) expression -> . forall_header IN expression COLON action_statement
    (71) stringval -> . STRING
    (50) dictvalue -> . LCBRACK dictitems RCBRACK
    (51) dictvalue -> . LCBRACK RCBRACK
    (69) forall_header -> . FORALL CNAME

    CNAME           shift and go to state 54
    LPAREN          shift and go to state 58
    NUMBER          shift and go to state 56
    MINUS           shift and go to state 55
    TRUE            shift and go to state 49
    FALSE           shift and go to state 52
    NONE            shift and go to state 45
    LSBRACK         shift and go to state 59
    NEWEVENT        shift and go to state 48
    NOT             shift and go to state 57
    IF              shift and go to state 51
    STRING          shift and go to state 22
    LCBRACK         shift and go to state 36
    FORALL          shift and go to state 53

    expression                     shift and go to state 110
    stringval                      shift and go to state 46
    dictvalue                      shift and go to state 50
    forall_header                  shift and go to state 47

state 82

    (15) constant -> CONSTANT CNAME EQUALS expression NEWLINE .

    NEWLINE         reduce using rule 15 (constant -> CONSTANT CNAME EQUALS expression NEWLINE .)
    IMPORT          reduce using rule 15 (constant -> CONSTANT CNAME EQUALS expression NEWLINE .)
    CONSTANT        reduce using rule 15 (constant -> CONSTANT CNAME EQUALS expression NEWLINE .)
    DECLARE         reduce using rule 15 (constant -> CONSTANT CNAME EQUALS expression NEWLINE .)
    CELL            reduce using rule 15 (constant -> CONSTANT CNAME EQUALS expression NEWLINE .)
    RULE            reduce using rule 15 (constant -> CONSTANT CNAME EQUALS expression NEWLINE .)
    EVENT           reduce using rule 15 (constant -> CONSTANT CNAME EQUALS expression NEWLINE .)
    $end            reduce using rule 15 (constant -> CONSTANT CNAME EQUALS expression NEWLINE .)


state 83

    (63) expression -> expression IN . expression
    (29) expression -> . expression POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> . expression POINT CNAME LPAREN RPAREN
    (31) expression -> . expression POINT CNAME
    (32) expression -> . CNAME LPAREN expressionlist RPAREN
    (33) expression -> . CNAME LPAREN RPAREN
    (36) expression -> . expression LSBRACK expression RSBRACK
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . CNAME
    (39) expression -> . NUMBER
    (40) expression -> . MINUS expression
    (41) expression -> . stringval
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . NONE
    (45) expression -> . LSBRACK listitems RSBRACK
    (46) expression -> . LSBRACK RSBRACK
    (49) expression -> . dictvalue
    (56) expression -> . NEWEVENT CNAME dictvalue
    (59) expression -> . expression COMPARE expression
    (60) expression -> . NOT expression
    (61) expression -> . expression OR expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression IN expression
    (64) expression -> . expression MODULO expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression TIMDIV expression
    (68) expression -> . IF expression THEN action_statement ELSE action_statement
    (70) expression -> . forall_header IN expression COLON action_statement
    (71) stringval -> . STRING
    (50) dictvalue -> . LCBRACK dictitems RCBRACK
    (51) dictvalue -> . LCBRACK RCBRACK
    (69) forall_header -> . FORALL CNAME

    CNAME           shift and go to state 54
    LPAREN          shift and go to state 58
    NUMBER          shift and go to state 56
    MINUS           shift and go to state 55
    TRUE            shift and go to state 49
    FALSE           shift and go to state 52
    NONE            shift and go to state 45
    LSBRACK         shift and go to state 59
    NEWEVENT        shift and go to state 48
    NOT             shift and go to state 57
    IF              shift and go to state 51
    STRING          shift and go to state 22
    LCBRACK         shift and go to state 36
    FORALL          shift and go to state 53

    expression                     shift and go to state 111
    stringval                      shift and go to state 46
    dictvalue                      shift and go to state 50
    forall_header                  shift and go to state 47

state 84

    (29) expression -> expression POINT . CNAME LPAREN expressionlist RPAREN
    (30) expression -> expression POINT . CNAME LPAREN RPAREN
    (31) expression -> expression POINT . CNAME

    CNAME           shift and go to state 112


state 85

    (36) expression -> expression LSBRACK . expression RSBRACK
    (29) expression -> . expression POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> . expression POINT CNAME LPAREN RPAREN
    (31) expression -> . expression POINT CNAME
    (32) expression -> . CNAME LPAREN expressionlist RPAREN
    (33) expression -> . CNAME LPAREN RPAREN
    (36) expression -> . expression LSBRACK expression RSBRACK
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . CNAME
    (39) expression -> . NUMBER
    (40) expression -> . MINUS expression
    (41) expression -> . stringval
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . NONE
    (45) expression -> . LSBRACK listitems RSBRACK
    (46) expression -> . LSBRACK RSBRACK
    (49) expression -> . dictvalue
    (56) expression -> . NEWEVENT CNAME dictvalue
    (59) expression -> . expression COMPARE expression
    (60) expression -> . NOT expression
    (61) expression -> . expression OR expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression IN expression
    (64) expression -> . expression MODULO expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression TIMDIV expression
    (68) expression -> . IF expression THEN action_statement ELSE action_statement
    (70) expression -> . forall_header IN expression COLON action_statement
    (71) stringval -> . STRING
    (50) dictvalue -> . LCBRACK dictitems RCBRACK
    (51) dictvalue -> . LCBRACK RCBRACK
    (69) forall_header -> . FORALL CNAME

    CNAME           shift and go to state 54
    LPAREN          shift and go to state 58
    NUMBER          shift and go to state 56
    MINUS           shift and go to state 55
    TRUE            shift and go to state 49
    FALSE           shift and go to state 52
    NONE            shift and go to state 45
    LSBRACK         shift and go to state 59
    NEWEVENT        shift and go to state 48
    NOT             shift and go to state 57
    IF              shift and go to state 51
    STRING          shift and go to state 22
    LCBRACK         shift and go to state 36
    FORALL          shift and go to state 53

    expression                     shift and go to state 113
    stringval                      shift and go to state 46
    dictvalue                      shift and go to state 50
    forall_header                  shift and go to state 47

state 86

    (65) expression -> expression PLUS . expression
    (29) expression -> . expression POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> . expression POINT CNAME LPAREN RPAREN
    (31) expression -> . expression POINT CNAME
    (32) expression -> . CNAME LPAREN expressionlist RPAREN
    (33) expression -> . CNAME LPAREN RPAREN
    (36) expression -> . expression LSBRACK expression RSBRACK
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . CNAME
    (39) expression -> . NUMBER
    (40) expression -> . MINUS expression
    (41) expression -> . stringval
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . NONE
    (45) expression -> . LSBRACK listitems RSBRACK
    (46) expression -> . LSBRACK RSBRACK
    (49) expression -> . dictvalue
    (56) expression -> . NEWEVENT CNAME dictvalue
    (59) expression -> . expression COMPARE expression
    (60) expression -> . NOT expression
    (61) expression -> . expression OR expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression IN expression
    (64) expression -> . expression MODULO expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression TIMDIV expression
    (68) expression -> . IF expression THEN action_statement ELSE action_statement
    (70) expression -> . forall_header IN expression COLON action_statement
    (71) stringval -> . STRING
    (50) dictvalue -> . LCBRACK dictitems RCBRACK
    (51) dictvalue -> . LCBRACK RCBRACK
    (69) forall_header -> . FORALL CNAME

    CNAME           shift and go to state 54
    LPAREN          shift and go to state 58
    NUMBER          shift and go to state 56
    MINUS           shift and go to state 55
    TRUE            shift and go to state 49
    FALSE           shift and go to state 52
    NONE            shift and go to state 45
    LSBRACK         shift and go to state 59
    NEWEVENT        shift and go to state 48
    NOT             shift and go to state 57
    IF              shift and go to state 51
    STRING          shift and go to state 22
    LCBRACK         shift and go to state 36
    FORALL          shift and go to state 53

    expression                     shift and go to state 114
    stringval                      shift and go to state 46
    dictvalue                      shift and go to state 50
    forall_header                  shift and go to state 47

state 87

    (64) expression -> expression MODULO . expression
    (29) expression -> . expression POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> . expression POINT CNAME LPAREN RPAREN
    (31) expression -> . expression POINT CNAME
    (32) expression -> . CNAME LPAREN expressionlist RPAREN
    (33) expression -> . CNAME LPAREN RPAREN
    (36) expression -> . expression LSBRACK expression RSBRACK
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . CNAME
    (39) expression -> . NUMBER
    (40) expression -> . MINUS expression
    (41) expression -> . stringval
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . NONE
    (45) expression -> . LSBRACK listitems RSBRACK
    (46) expression -> . LSBRACK RSBRACK
    (49) expression -> . dictvalue
    (56) expression -> . NEWEVENT CNAME dictvalue
    (59) expression -> . expression COMPARE expression
    (60) expression -> . NOT expression
    (61) expression -> . expression OR expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression IN expression
    (64) expression -> . expression MODULO expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression TIMDIV expression
    (68) expression -> . IF expression THEN action_statement ELSE action_statement
    (70) expression -> . forall_header IN expression COLON action_statement
    (71) stringval -> . STRING
    (50) dictvalue -> . LCBRACK dictitems RCBRACK
    (51) dictvalue -> . LCBRACK RCBRACK
    (69) forall_header -> . FORALL CNAME

    CNAME           shift and go to state 54
    LPAREN          shift and go to state 58
    NUMBER          shift and go to state 56
    MINUS           shift and go to state 55
    TRUE            shift and go to state 49
    FALSE           shift and go to state 52
    NONE            shift and go to state 45
    LSBRACK         shift and go to state 59
    NEWEVENT        shift and go to state 48
    NOT             shift and go to state 57
    IF              shift and go to state 51
    STRING          shift and go to state 22
    LCBRACK         shift and go to state 36
    FORALL          shift and go to state 53

    expression                     shift and go to state 115
    stringval                      shift and go to state 46
    dictvalue                      shift and go to state 50
    forall_header                  shift and go to state 47

state 88

    (61) expression -> expression OR . expression
    (29) expression -> . expression POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> . expression POINT CNAME LPAREN RPAREN
    (31) expression -> . expression POINT CNAME
    (32) expression -> . CNAME LPAREN expressionlist RPAREN
    (33) expression -> . CNAME LPAREN RPAREN
    (36) expression -> . expression LSBRACK expression RSBRACK
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . CNAME
    (39) expression -> . NUMBER
    (40) expression -> . MINUS expression
    (41) expression -> . stringval
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . NONE
    (45) expression -> . LSBRACK listitems RSBRACK
    (46) expression -> . LSBRACK RSBRACK
    (49) expression -> . dictvalue
    (56) expression -> . NEWEVENT CNAME dictvalue
    (59) expression -> . expression COMPARE expression
    (60) expression -> . NOT expression
    (61) expression -> . expression OR expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression IN expression
    (64) expression -> . expression MODULO expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression TIMDIV expression
    (68) expression -> . IF expression THEN action_statement ELSE action_statement
    (70) expression -> . forall_header IN expression COLON action_statement
    (71) stringval -> . STRING
    (50) dictvalue -> . LCBRACK dictitems RCBRACK
    (51) dictvalue -> . LCBRACK RCBRACK
    (69) forall_header -> . FORALL CNAME

    CNAME           shift and go to state 54
    LPAREN          shift and go to state 58
    NUMBER          shift and go to state 56
    MINUS           shift and go to state 55
    TRUE            shift and go to state 49
    FALSE           shift and go to state 52
    NONE            shift and go to state 45
    LSBRACK         shift and go to state 59
    NEWEVENT        shift and go to state 48
    NOT             shift and go to state 57
    IF              shift and go to state 51
    STRING          shift and go to state 22
    LCBRACK         shift and go to state 36
    FORALL          shift and go to state 53

    expression                     shift and go to state 116
    stringval                      shift and go to state 46
    dictvalue                      shift and go to state 50
    forall_header                  shift and go to state 47

state 89

    (70) expression -> forall_header IN . expression COLON action_statement
    (29) expression -> . expression POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> . expression POINT CNAME LPAREN RPAREN
    (31) expression -> . expression POINT CNAME
    (32) expression -> . CNAME LPAREN expressionlist RPAREN
    (33) expression -> . CNAME LPAREN RPAREN
    (36) expression -> . expression LSBRACK expression RSBRACK
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . CNAME
    (39) expression -> . NUMBER
    (40) expression -> . MINUS expression
    (41) expression -> . stringval
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . NONE
    (45) expression -> . LSBRACK listitems RSBRACK
    (46) expression -> . LSBRACK RSBRACK
    (49) expression -> . dictvalue
    (56) expression -> . NEWEVENT CNAME dictvalue
    (59) expression -> . expression COMPARE expression
    (60) expression -> . NOT expression
    (61) expression -> . expression OR expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression IN expression
    (64) expression -> . expression MODULO expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression TIMDIV expression
    (68) expression -> . IF expression THEN action_statement ELSE action_statement
    (70) expression -> . forall_header IN expression COLON action_statement
    (71) stringval -> . STRING
    (50) dictvalue -> . LCBRACK dictitems RCBRACK
    (51) dictvalue -> . LCBRACK RCBRACK
    (69) forall_header -> . FORALL CNAME

    CNAME           shift and go to state 54
    LPAREN          shift and go to state 58
    NUMBER          shift and go to state 56
    MINUS           shift and go to state 55
    TRUE            shift and go to state 49
    FALSE           shift and go to state 52
    NONE            shift and go to state 45
    LSBRACK         shift and go to state 59
    NEWEVENT        shift and go to state 48
    NOT             shift and go to state 57
    IF              shift and go to state 51
    STRING          shift and go to state 22
    LCBRACK         shift and go to state 36
    FORALL          shift and go to state 53

    expression                     shift and go to state 117
    stringval                      shift and go to state 46
    dictvalue                      shift and go to state 50
    forall_header                  shift and go to state 47

state 90

    (56) expression -> NEWEVENT CNAME . dictvalue
    (50) dictvalue -> . LCBRACK dictitems RCBRACK
    (51) dictvalue -> . LCBRACK RCBRACK

    LCBRACK         shift and go to state 36

    dictvalue                      shift and go to state 118

state 91

    (68) expression -> IF expression . THEN action_statement ELSE action_statement
    (29) expression -> expression . POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> expression . POINT CNAME LPAREN RPAREN
    (31) expression -> expression . POINT CNAME
    (36) expression -> expression . LSBRACK expression RSBRACK
    (59) expression -> expression . COMPARE expression
    (61) expression -> expression . OR expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . IN expression
    (64) expression -> expression . MODULO expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . TIMDIV expression

    THEN            shift and go to state 119
    POINT           shift and go to state 84
    LSBRACK         shift and go to state 85
    COMPARE         shift and go to state 81
    OR              shift and go to state 88
    AND             shift and go to state 78
    IN              shift and go to state 83
    MODULO          shift and go to state 87
    PLUS            shift and go to state 86
    MINUS           shift and go to state 80
    TIMDIV          shift and go to state 79


state 92

    (69) forall_header -> FORALL CNAME .

    IN              reduce using rule 69 (forall_header -> FORALL CNAME .)


state 93

    (32) expression -> CNAME LPAREN . expressionlist RPAREN
    (33) expression -> CNAME LPAREN . RPAREN
    (34) expressionlist -> . expression
    (35) expressionlist -> . expression COMMA expressionlist
    (29) expression -> . expression POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> . expression POINT CNAME LPAREN RPAREN
    (31) expression -> . expression POINT CNAME
    (32) expression -> . CNAME LPAREN expressionlist RPAREN
    (33) expression -> . CNAME LPAREN RPAREN
    (36) expression -> . expression LSBRACK expression RSBRACK
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . CNAME
    (39) expression -> . NUMBER
    (40) expression -> . MINUS expression
    (41) expression -> . stringval
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . NONE
    (45) expression -> . LSBRACK listitems RSBRACK
    (46) expression -> . LSBRACK RSBRACK
    (49) expression -> . dictvalue
    (56) expression -> . NEWEVENT CNAME dictvalue
    (59) expression -> . expression COMPARE expression
    (60) expression -> . NOT expression
    (61) expression -> . expression OR expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression IN expression
    (64) expression -> . expression MODULO expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression TIMDIV expression
    (68) expression -> . IF expression THEN action_statement ELSE action_statement
    (70) expression -> . forall_header IN expression COLON action_statement
    (71) stringval -> . STRING
    (50) dictvalue -> . LCBRACK dictitems RCBRACK
    (51) dictvalue -> . LCBRACK RCBRACK
    (69) forall_header -> . FORALL CNAME

    RPAREN          shift and go to state 121
    CNAME           shift and go to state 54
    LPAREN          shift and go to state 58
    NUMBER          shift and go to state 56
    MINUS           shift and go to state 55
    TRUE            shift and go to state 49
    FALSE           shift and go to state 52
    NONE            shift and go to state 45
    LSBRACK         shift and go to state 59
    NEWEVENT        shift and go to state 48
    NOT             shift and go to state 57
    IF              shift and go to state 51
    STRING          shift and go to state 22
    LCBRACK         shift and go to state 36
    FORALL          shift and go to state 53

    expression                     shift and go to state 120
    stringval                      shift and go to state 46
    dictvalue                      shift and go to state 50
    forall_header                  shift and go to state 47
    expressionlist                 shift and go to state 122

state 94

    (40) expression -> MINUS expression .
    (29) expression -> expression . POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> expression . POINT CNAME LPAREN RPAREN
    (31) expression -> expression . POINT CNAME
    (36) expression -> expression . LSBRACK expression RSBRACK
    (59) expression -> expression . COMPARE expression
    (61) expression -> expression . OR expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . IN expression
    (64) expression -> expression . MODULO expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . TIMDIV expression

    COMMA           reduce using rule 40 (expression -> MINUS expression .)
    POINT           reduce using rule 40 (expression -> MINUS expression .)
    LSBRACK         reduce using rule 40 (expression -> MINUS expression .)
    COMPARE         reduce using rule 40 (expression -> MINUS expression .)
    OR              reduce using rule 40 (expression -> MINUS expression .)
    AND             reduce using rule 40 (expression -> MINUS expression .)
    IN              reduce using rule 40 (expression -> MINUS expression .)
    MODULO          reduce using rule 40 (expression -> MINUS expression .)
    PLUS            reduce using rule 40 (expression -> MINUS expression .)
    MINUS           reduce using rule 40 (expression -> MINUS expression .)
    RCBRACK         reduce using rule 40 (expression -> MINUS expression .)
    NEWLINE         reduce using rule 40 (expression -> MINUS expression .)
    ELSE            reduce using rule 40 (expression -> MINUS expression .)
    RSBRACK         reduce using rule 40 (expression -> MINUS expression .)
    THEN            reduce using rule 40 (expression -> MINUS expression .)
    RPAREN          reduce using rule 40 (expression -> MINUS expression .)
    COLON           reduce using rule 40 (expression -> MINUS expression .)
    TIMDIV          shift and go to state 79

  ! TIMDIV          [ reduce using rule 40 (expression -> MINUS expression .) ]
  ! POINT           [ shift and go to state 84 ]
  ! LSBRACK         [ shift and go to state 85 ]
  ! COMPARE         [ shift and go to state 81 ]
  ! OR              [ shift and go to state 88 ]
  ! AND             [ shift and go to state 78 ]
  ! IN              [ shift and go to state 83 ]
  ! MODULO          [ shift and go to state 87 ]
  ! PLUS            [ shift and go to state 86 ]
  ! MINUS           [ shift and go to state 80 ]


state 95

    (60) expression -> NOT expression .
    (29) expression -> expression . POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> expression . POINT CNAME LPAREN RPAREN
    (31) expression -> expression . POINT CNAME
    (36) expression -> expression . LSBRACK expression RSBRACK
    (59) expression -> expression . COMPARE expression
    (61) expression -> expression . OR expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . IN expression
    (64) expression -> expression . MODULO expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . TIMDIV expression

    COMMA           reduce using rule 60 (expression -> NOT expression .)
    POINT           reduce using rule 60 (expression -> NOT expression .)
    LSBRACK         reduce using rule 60 (expression -> NOT expression .)
    OR              reduce using rule 60 (expression -> NOT expression .)
    AND             reduce using rule 60 (expression -> NOT expression .)
    IN              reduce using rule 60 (expression -> NOT expression .)
    RCBRACK         reduce using rule 60 (expression -> NOT expression .)
    NEWLINE         reduce using rule 60 (expression -> NOT expression .)
    ELSE            reduce using rule 60 (expression -> NOT expression .)
    RSBRACK         reduce using rule 60 (expression -> NOT expression .)
    THEN            reduce using rule 60 (expression -> NOT expression .)
    RPAREN          reduce using rule 60 (expression -> NOT expression .)
    COLON           reduce using rule 60 (expression -> NOT expression .)
    COMPARE         shift and go to state 81
    MODULO          shift and go to state 87
    PLUS            shift and go to state 86
    MINUS           shift and go to state 80
    TIMDIV          shift and go to state 79

  ! COMPARE         [ reduce using rule 60 (expression -> NOT expression .) ]
  ! MODULO          [ reduce using rule 60 (expression -> NOT expression .) ]
  ! PLUS            [ reduce using rule 60 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 60 (expression -> NOT expression .) ]
  ! TIMDIV          [ reduce using rule 60 (expression -> NOT expression .) ]
  ! POINT           [ shift and go to state 84 ]
  ! LSBRACK         [ shift and go to state 85 ]
  ! OR              [ shift and go to state 88 ]
  ! AND             [ shift and go to state 78 ]
  ! IN              [ shift and go to state 83 ]


state 96

    (37) expression -> LPAREN expression . RPAREN
    (29) expression -> expression . POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> expression . POINT CNAME LPAREN RPAREN
    (31) expression -> expression . POINT CNAME
    (36) expression -> expression . LSBRACK expression RSBRACK
    (59) expression -> expression . COMPARE expression
    (61) expression -> expression . OR expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . IN expression
    (64) expression -> expression . MODULO expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . TIMDIV expression

    RPAREN          shift and go to state 123
    POINT           shift and go to state 84
    LSBRACK         shift and go to state 85
    COMPARE         shift and go to state 81
    OR              shift and go to state 88
    AND             shift and go to state 78
    IN              shift and go to state 83
    MODULO          shift and go to state 87
    PLUS            shift and go to state 86
    MINUS           shift and go to state 80
    TIMDIV          shift and go to state 79


state 97

    (47) listitems -> expression .
    (48) listitems -> expression . COMMA listitems
    (29) expression -> expression . POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> expression . POINT CNAME LPAREN RPAREN
    (31) expression -> expression . POINT CNAME
    (36) expression -> expression . LSBRACK expression RSBRACK
    (59) expression -> expression . COMPARE expression
    (61) expression -> expression . OR expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . IN expression
    (64) expression -> expression . MODULO expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . TIMDIV expression

    RSBRACK         reduce using rule 47 (listitems -> expression .)
    COMMA           shift and go to state 124
    POINT           shift and go to state 84
    LSBRACK         shift and go to state 85
    COMPARE         shift and go to state 81
    OR              shift and go to state 88
    AND             shift and go to state 78
    IN              shift and go to state 83
    MODULO          shift and go to state 87
    PLUS            shift and go to state 86
    MINUS           shift and go to state 80
    TIMDIV          shift and go to state 79


state 98

    (46) expression -> LSBRACK RSBRACK .

    COMMA           reduce using rule 46 (expression -> LSBRACK RSBRACK .)
    POINT           reduce using rule 46 (expression -> LSBRACK RSBRACK .)
    LSBRACK         reduce using rule 46 (expression -> LSBRACK RSBRACK .)
    COMPARE         reduce using rule 46 (expression -> LSBRACK RSBRACK .)
    OR              reduce using rule 46 (expression -> LSBRACK RSBRACK .)
    AND             reduce using rule 46 (expression -> LSBRACK RSBRACK .)
    IN              reduce using rule 46 (expression -> LSBRACK RSBRACK .)
    MODULO          reduce using rule 46 (expression -> LSBRACK RSBRACK .)
    PLUS            reduce using rule 46 (expression -> LSBRACK RSBRACK .)
    MINUS           reduce using rule 46 (expression -> LSBRACK RSBRACK .)
    TIMDIV          reduce using rule 46 (expression -> LSBRACK RSBRACK .)
    RCBRACK         reduce using rule 46 (expression -> LSBRACK RSBRACK .)
    NEWLINE         reduce using rule 46 (expression -> LSBRACK RSBRACK .)
    ELSE            reduce using rule 46 (expression -> LSBRACK RSBRACK .)
    RSBRACK         reduce using rule 46 (expression -> LSBRACK RSBRACK .)
    THEN            reduce using rule 46 (expression -> LSBRACK RSBRACK .)
    RPAREN          reduce using rule 46 (expression -> LSBRACK RSBRACK .)
    COLON           reduce using rule 46 (expression -> LSBRACK RSBRACK .)


state 99

    (45) expression -> LSBRACK listitems . RSBRACK

    RSBRACK         shift and go to state 125


state 100

    (58) assign -> CNAME LSBRACK expression RSBRACK . EQUALS expression

    EQUALS          shift and go to state 126


state 101

    (54) dictitems -> dicttag COLON . expression
    (55) dictitems -> dicttag COLON . expression COMMA dictitems
    (29) expression -> . expression POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> . expression POINT CNAME LPAREN RPAREN
    (31) expression -> . expression POINT CNAME
    (32) expression -> . CNAME LPAREN expressionlist RPAREN
    (33) expression -> . CNAME LPAREN RPAREN
    (36) expression -> . expression LSBRACK expression RSBRACK
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . CNAME
    (39) expression -> . NUMBER
    (40) expression -> . MINUS expression
    (41) expression -> . stringval
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . NONE
    (45) expression -> . LSBRACK listitems RSBRACK
    (46) expression -> . LSBRACK RSBRACK
    (49) expression -> . dictvalue
    (56) expression -> . NEWEVENT CNAME dictvalue
    (59) expression -> . expression COMPARE expression
    (60) expression -> . NOT expression
    (61) expression -> . expression OR expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression IN expression
    (64) expression -> . expression MODULO expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression TIMDIV expression
    (68) expression -> . IF expression THEN action_statement ELSE action_statement
    (70) expression -> . forall_header IN expression COLON action_statement
    (71) stringval -> . STRING
    (50) dictvalue -> . LCBRACK dictitems RCBRACK
    (51) dictvalue -> . LCBRACK RCBRACK
    (69) forall_header -> . FORALL CNAME

    CNAME           shift and go to state 54
    LPAREN          shift and go to state 58
    NUMBER          shift and go to state 56
    MINUS           shift and go to state 55
    TRUE            shift and go to state 49
    FALSE           shift and go to state 52
    NONE            shift and go to state 45
    LSBRACK         shift and go to state 59
    NEWEVENT        shift and go to state 48
    NOT             shift and go to state 57
    IF              shift and go to state 51
    STRING          shift and go to state 22
    LCBRACK         shift and go to state 36
    FORALL          shift and go to state 53

    expression                     shift and go to state 127
    stringval                      shift and go to state 46
    dictvalue                      shift and go to state 50
    forall_header                  shift and go to state 47

state 102

    (50) dictvalue -> LCBRACK dictitems RCBRACK .

    POINT           reduce using rule 50 (dictvalue -> LCBRACK dictitems RCBRACK .)
    LSBRACK         reduce using rule 50 (dictvalue -> LCBRACK dictitems RCBRACK .)
    COMPARE         reduce using rule 50 (dictvalue -> LCBRACK dictitems RCBRACK .)
    OR              reduce using rule 50 (dictvalue -> LCBRACK dictitems RCBRACK .)
    AND             reduce using rule 50 (dictvalue -> LCBRACK dictitems RCBRACK .)
    IN              reduce using rule 50 (dictvalue -> LCBRACK dictitems RCBRACK .)
    MODULO          reduce using rule 50 (dictvalue -> LCBRACK dictitems RCBRACK .)
    PLUS            reduce using rule 50 (dictvalue -> LCBRACK dictitems RCBRACK .)
    MINUS           reduce using rule 50 (dictvalue -> LCBRACK dictitems RCBRACK .)
    TIMDIV          reduce using rule 50 (dictvalue -> LCBRACK dictitems RCBRACK .)
    NEWLINE         reduce using rule 50 (dictvalue -> LCBRACK dictitems RCBRACK .)
    ELSE            reduce using rule 50 (dictvalue -> LCBRACK dictitems RCBRACK .)
    RSBRACK         reduce using rule 50 (dictvalue -> LCBRACK dictitems RCBRACK .)
    THEN            reduce using rule 50 (dictvalue -> LCBRACK dictitems RCBRACK .)
    RPAREN          reduce using rule 50 (dictvalue -> LCBRACK dictitems RCBRACK .)
    COMMA           reduce using rule 50 (dictvalue -> LCBRACK dictitems RCBRACK .)
    COLON           reduce using rule 50 (dictvalue -> LCBRACK dictitems RCBRACK .)
    RCBRACK         reduce using rule 50 (dictvalue -> LCBRACK dictitems RCBRACK .)


state 103

    (13) celldef -> CELL stringval GADGET stringval OPTIONS . dictvalue NEWLINE
    (50) dictvalue -> . LCBRACK dictitems RCBRACK
    (51) dictvalue -> . LCBRACK RCBRACK

    LCBRACK         shift and go to state 36

    dictvalue                      shift and go to state 128

state 104

    (73) newline -> NEWLINE newline .

    CNAME           reduce using rule 73 (newline -> NEWLINE newline .)
    LPAREN          reduce using rule 73 (newline -> NEWLINE newline .)
    NUMBER          reduce using rule 73 (newline -> NEWLINE newline .)
    MINUS           reduce using rule 73 (newline -> NEWLINE newline .)
    TRUE            reduce using rule 73 (newline -> NEWLINE newline .)
    FALSE           reduce using rule 73 (newline -> NEWLINE newline .)
    NONE            reduce using rule 73 (newline -> NEWLINE newline .)
    LSBRACK         reduce using rule 73 (newline -> NEWLINE newline .)
    NEWEVENT        reduce using rule 73 (newline -> NEWLINE newline .)
    NOT             reduce using rule 73 (newline -> NEWLINE newline .)
    IF              reduce using rule 73 (newline -> NEWLINE newline .)
    STRING          reduce using rule 73 (newline -> NEWLINE newline .)
    LCBRACK         reduce using rule 73 (newline -> NEWLINE newline .)
    FORALL          reduce using rule 73 (newline -> NEWLINE newline .)
    NEWLINE         reduce using rule 73 (newline -> NEWLINE newline .)
    IMPORT          reduce using rule 73 (newline -> NEWLINE newline .)
    CONSTANT        reduce using rule 73 (newline -> NEWLINE newline .)
    DECLARE         reduce using rule 73 (newline -> NEWLINE newline .)
    CELL            reduce using rule 73 (newline -> NEWLINE newline .)
    RULE            reduce using rule 73 (newline -> NEWLINE newline .)
    EVENT           reduce using rule 73 (newline -> NEWLINE newline .)
    $end            reduce using rule 73 (newline -> NEWLINE newline .)
    ACTION          reduce using rule 73 (newline -> NEWLINE newline .)
    CONDITION       reduce using rule 73 (newline -> NEWLINE newline .)


state 105

    (27) calls -> action_statement newline .
    (28) calls -> action_statement newline . calls
    (27) calls -> . action_statement newline
    (28) calls -> . action_statement newline calls
    (25) action_statement -> . expression
    (26) action_statement -> . assign
    (29) expression -> . expression POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> . expression POINT CNAME LPAREN RPAREN
    (31) expression -> . expression POINT CNAME
    (32) expression -> . CNAME LPAREN expressionlist RPAREN
    (33) expression -> . CNAME LPAREN RPAREN
    (36) expression -> . expression LSBRACK expression RSBRACK
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . CNAME
    (39) expression -> . NUMBER
    (40) expression -> . MINUS expression
    (41) expression -> . stringval
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . NONE
    (45) expression -> . LSBRACK listitems RSBRACK
    (46) expression -> . LSBRACK RSBRACK
    (49) expression -> . dictvalue
    (56) expression -> . NEWEVENT CNAME dictvalue
    (59) expression -> . expression COMPARE expression
    (60) expression -> . NOT expression
    (61) expression -> . expression OR expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression IN expression
    (64) expression -> . expression MODULO expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression TIMDIV expression
    (68) expression -> . IF expression THEN action_statement ELSE action_statement
    (70) expression -> . forall_header IN expression COLON action_statement
    (57) assign -> . CNAME EQUALS expression
    (58) assign -> . CNAME LSBRACK expression RSBRACK EQUALS expression
    (71) stringval -> . STRING
    (50) dictvalue -> . LCBRACK dictitems RCBRACK
    (51) dictvalue -> . LCBRACK RCBRACK
    (69) forall_header -> . FORALL CNAME

    NEWLINE         reduce using rule 27 (calls -> action_statement newline .)
    IMPORT          reduce using rule 27 (calls -> action_statement newline .)
    CONSTANT        reduce using rule 27 (calls -> action_statement newline .)
    DECLARE         reduce using rule 27 (calls -> action_statement newline .)
    CELL            reduce using rule 27 (calls -> action_statement newline .)
    RULE            reduce using rule 27 (calls -> action_statement newline .)
    EVENT           reduce using rule 27 (calls -> action_statement newline .)
    $end            reduce using rule 27 (calls -> action_statement newline .)
    CNAME           shift and go to state 74
    LPAREN          shift and go to state 58
    NUMBER          shift and go to state 56
    MINUS           shift and go to state 55
    TRUE            shift and go to state 49
    FALSE           shift and go to state 52
    NONE            shift and go to state 45
    LSBRACK         shift and go to state 59
    NEWEVENT        shift and go to state 48
    NOT             shift and go to state 57
    IF              shift and go to state 51
    STRING          shift and go to state 22
    LCBRACK         shift and go to state 36
    FORALL          shift and go to state 53

    expression                     shift and go to state 71
    assign                         shift and go to state 75
    calls                          shift and go to state 129
    action_statement               shift and go to state 72
    stringval                      shift and go to state 46
    dictvalue                      shift and go to state 50
    forall_header                  shift and go to state 47

state 106

    (23) condition -> CONDITION expression newline .

    ACTION          reduce using rule 23 (condition -> CONDITION expression newline .)


state 107

    (62) expression -> expression AND expression .
    (29) expression -> expression . POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> expression . POINT CNAME LPAREN RPAREN
    (31) expression -> expression . POINT CNAME
    (36) expression -> expression . LSBRACK expression RSBRACK
    (59) expression -> expression . COMPARE expression
    (61) expression -> expression . OR expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . IN expression
    (64) expression -> expression . MODULO expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . TIMDIV expression

    COMMA           reduce using rule 62 (expression -> expression AND expression .)
    POINT           reduce using rule 62 (expression -> expression AND expression .)
    LSBRACK         reduce using rule 62 (expression -> expression AND expression .)
    OR              reduce using rule 62 (expression -> expression AND expression .)
    AND             reduce using rule 62 (expression -> expression AND expression .)
    IN              reduce using rule 62 (expression -> expression AND expression .)
    RCBRACK         reduce using rule 62 (expression -> expression AND expression .)
    NEWLINE         reduce using rule 62 (expression -> expression AND expression .)
    ELSE            reduce using rule 62 (expression -> expression AND expression .)
    RSBRACK         reduce using rule 62 (expression -> expression AND expression .)
    THEN            reduce using rule 62 (expression -> expression AND expression .)
    RPAREN          reduce using rule 62 (expression -> expression AND expression .)
    COLON           reduce using rule 62 (expression -> expression AND expression .)
    COMPARE         shift and go to state 81
    MODULO          shift and go to state 87
    PLUS            shift and go to state 86
    MINUS           shift and go to state 80
    TIMDIV          shift and go to state 79

  ! COMPARE         [ reduce using rule 62 (expression -> expression AND expression .) ]
  ! MODULO          [ reduce using rule 62 (expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 62 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 62 (expression -> expression AND expression .) ]
  ! TIMDIV          [ reduce using rule 62 (expression -> expression AND expression .) ]
  ! POINT           [ shift and go to state 84 ]
  ! LSBRACK         [ shift and go to state 85 ]
  ! OR              [ shift and go to state 88 ]
  ! AND             [ shift and go to state 78 ]
  ! IN              [ shift and go to state 83 ]


state 108

    (67) expression -> expression TIMDIV expression .
    (29) expression -> expression . POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> expression . POINT CNAME LPAREN RPAREN
    (31) expression -> expression . POINT CNAME
    (36) expression -> expression . LSBRACK expression RSBRACK
    (59) expression -> expression . COMPARE expression
    (61) expression -> expression . OR expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . IN expression
    (64) expression -> expression . MODULO expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . TIMDIV expression

    COMMA           reduce using rule 67 (expression -> expression TIMDIV expression .)
    POINT           reduce using rule 67 (expression -> expression TIMDIV expression .)
    LSBRACK         reduce using rule 67 (expression -> expression TIMDIV expression .)
    COMPARE         reduce using rule 67 (expression -> expression TIMDIV expression .)
    OR              reduce using rule 67 (expression -> expression TIMDIV expression .)
    AND             reduce using rule 67 (expression -> expression TIMDIV expression .)
    IN              reduce using rule 67 (expression -> expression TIMDIV expression .)
    MODULO          reduce using rule 67 (expression -> expression TIMDIV expression .)
    PLUS            reduce using rule 67 (expression -> expression TIMDIV expression .)
    MINUS           reduce using rule 67 (expression -> expression TIMDIV expression .)
    TIMDIV          reduce using rule 67 (expression -> expression TIMDIV expression .)
    RCBRACK         reduce using rule 67 (expression -> expression TIMDIV expression .)
    NEWLINE         reduce using rule 67 (expression -> expression TIMDIV expression .)
    ELSE            reduce using rule 67 (expression -> expression TIMDIV expression .)
    RSBRACK         reduce using rule 67 (expression -> expression TIMDIV expression .)
    THEN            reduce using rule 67 (expression -> expression TIMDIV expression .)
    RPAREN          reduce using rule 67 (expression -> expression TIMDIV expression .)
    COLON           reduce using rule 67 (expression -> expression TIMDIV expression .)

  ! POINT           [ shift and go to state 84 ]
  ! LSBRACK         [ shift and go to state 85 ]
  ! COMPARE         [ shift and go to state 81 ]
  ! OR              [ shift and go to state 88 ]
  ! AND             [ shift and go to state 78 ]
  ! IN              [ shift and go to state 83 ]
  ! MODULO          [ shift and go to state 87 ]
  ! PLUS            [ shift and go to state 86 ]
  ! MINUS           [ shift and go to state 80 ]
  ! TIMDIV          [ shift and go to state 79 ]


state 109

    (66) expression -> expression MINUS expression .
    (29) expression -> expression . POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> expression . POINT CNAME LPAREN RPAREN
    (31) expression -> expression . POINT CNAME
    (36) expression -> expression . LSBRACK expression RSBRACK
    (59) expression -> expression . COMPARE expression
    (61) expression -> expression . OR expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . IN expression
    (64) expression -> expression . MODULO expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . TIMDIV expression

    COMMA           reduce using rule 66 (expression -> expression MINUS expression .)
    POINT           reduce using rule 66 (expression -> expression MINUS expression .)
    LSBRACK         reduce using rule 66 (expression -> expression MINUS expression .)
    COMPARE         reduce using rule 66 (expression -> expression MINUS expression .)
    OR              reduce using rule 66 (expression -> expression MINUS expression .)
    AND             reduce using rule 66 (expression -> expression MINUS expression .)
    IN              reduce using rule 66 (expression -> expression MINUS expression .)
    MODULO          reduce using rule 66 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 66 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 66 (expression -> expression MINUS expression .)
    RCBRACK         reduce using rule 66 (expression -> expression MINUS expression .)
    NEWLINE         reduce using rule 66 (expression -> expression MINUS expression .)
    ELSE            reduce using rule 66 (expression -> expression MINUS expression .)
    RSBRACK         reduce using rule 66 (expression -> expression MINUS expression .)
    THEN            reduce using rule 66 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 66 (expression -> expression MINUS expression .)
    COLON           reduce using rule 66 (expression -> expression MINUS expression .)
    TIMDIV          shift and go to state 79

  ! TIMDIV          [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! POINT           [ shift and go to state 84 ]
  ! LSBRACK         [ shift and go to state 85 ]
  ! COMPARE         [ shift and go to state 81 ]
  ! OR              [ shift and go to state 88 ]
  ! AND             [ shift and go to state 78 ]
  ! IN              [ shift and go to state 83 ]
  ! MODULO          [ shift and go to state 87 ]
  ! PLUS            [ shift and go to state 86 ]
  ! MINUS           [ shift and go to state 80 ]


state 110

    (59) expression -> expression COMPARE expression .
    (29) expression -> expression . POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> expression . POINT CNAME LPAREN RPAREN
    (31) expression -> expression . POINT CNAME
    (36) expression -> expression . LSBRACK expression RSBRACK
    (59) expression -> expression . COMPARE expression
    (61) expression -> expression . OR expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . IN expression
    (64) expression -> expression . MODULO expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . TIMDIV expression

    COMMA           reduce using rule 59 (expression -> expression COMPARE expression .)
    POINT           reduce using rule 59 (expression -> expression COMPARE expression .)
    LSBRACK         reduce using rule 59 (expression -> expression COMPARE expression .)
    COMPARE         reduce using rule 59 (expression -> expression COMPARE expression .)
    OR              reduce using rule 59 (expression -> expression COMPARE expression .)
    AND             reduce using rule 59 (expression -> expression COMPARE expression .)
    IN              reduce using rule 59 (expression -> expression COMPARE expression .)
    RCBRACK         reduce using rule 59 (expression -> expression COMPARE expression .)
    NEWLINE         reduce using rule 59 (expression -> expression COMPARE expression .)
    ELSE            reduce using rule 59 (expression -> expression COMPARE expression .)
    RSBRACK         reduce using rule 59 (expression -> expression COMPARE expression .)
    THEN            reduce using rule 59 (expression -> expression COMPARE expression .)
    RPAREN          reduce using rule 59 (expression -> expression COMPARE expression .)
    COLON           reduce using rule 59 (expression -> expression COMPARE expression .)
    MODULO          shift and go to state 87
    PLUS            shift and go to state 86
    MINUS           shift and go to state 80
    TIMDIV          shift and go to state 79

  ! MODULO          [ reduce using rule 59 (expression -> expression COMPARE expression .) ]
  ! PLUS            [ reduce using rule 59 (expression -> expression COMPARE expression .) ]
  ! MINUS           [ reduce using rule 59 (expression -> expression COMPARE expression .) ]
  ! TIMDIV          [ reduce using rule 59 (expression -> expression COMPARE expression .) ]
  ! POINT           [ shift and go to state 84 ]
  ! LSBRACK         [ shift and go to state 85 ]
  ! COMPARE         [ shift and go to state 81 ]
  ! OR              [ shift and go to state 88 ]
  ! AND             [ shift and go to state 78 ]
  ! IN              [ shift and go to state 83 ]


state 111

    (63) expression -> expression IN expression .
    (29) expression -> expression . POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> expression . POINT CNAME LPAREN RPAREN
    (31) expression -> expression . POINT CNAME
    (36) expression -> expression . LSBRACK expression RSBRACK
    (59) expression -> expression . COMPARE expression
    (61) expression -> expression . OR expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . IN expression
    (64) expression -> expression . MODULO expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . TIMDIV expression

    COMMA           reduce using rule 63 (expression -> expression IN expression .)
    POINT           reduce using rule 63 (expression -> expression IN expression .)
    LSBRACK         reduce using rule 63 (expression -> expression IN expression .)
    IN              reduce using rule 63 (expression -> expression IN expression .)
    RCBRACK         reduce using rule 63 (expression -> expression IN expression .)
    NEWLINE         reduce using rule 63 (expression -> expression IN expression .)
    ELSE            reduce using rule 63 (expression -> expression IN expression .)
    RSBRACK         reduce using rule 63 (expression -> expression IN expression .)
    THEN            reduce using rule 63 (expression -> expression IN expression .)
    RPAREN          reduce using rule 63 (expression -> expression IN expression .)
    COLON           reduce using rule 63 (expression -> expression IN expression .)
    COMPARE         shift and go to state 81
    OR              shift and go to state 88
    AND             shift and go to state 78
    MODULO          shift and go to state 87
    PLUS            shift and go to state 86
    MINUS           shift and go to state 80
    TIMDIV          shift and go to state 79

  ! COMPARE         [ reduce using rule 63 (expression -> expression IN expression .) ]
  ! OR              [ reduce using rule 63 (expression -> expression IN expression .) ]
  ! AND             [ reduce using rule 63 (expression -> expression IN expression .) ]
  ! MODULO          [ reduce using rule 63 (expression -> expression IN expression .) ]
  ! PLUS            [ reduce using rule 63 (expression -> expression IN expression .) ]
  ! MINUS           [ reduce using rule 63 (expression -> expression IN expression .) ]
  ! TIMDIV          [ reduce using rule 63 (expression -> expression IN expression .) ]
  ! POINT           [ shift and go to state 84 ]
  ! LSBRACK         [ shift and go to state 85 ]
  ! IN              [ shift and go to state 83 ]


state 112

    (29) expression -> expression POINT CNAME . LPAREN expressionlist RPAREN
    (30) expression -> expression POINT CNAME . LPAREN RPAREN
    (31) expression -> expression POINT CNAME .

    LPAREN          shift and go to state 130
    COMMA           reduce using rule 31 (expression -> expression POINT CNAME .)
    POINT           reduce using rule 31 (expression -> expression POINT CNAME .)
    LSBRACK         reduce using rule 31 (expression -> expression POINT CNAME .)
    COMPARE         reduce using rule 31 (expression -> expression POINT CNAME .)
    OR              reduce using rule 31 (expression -> expression POINT CNAME .)
    AND             reduce using rule 31 (expression -> expression POINT CNAME .)
    IN              reduce using rule 31 (expression -> expression POINT CNAME .)
    MODULO          reduce using rule 31 (expression -> expression POINT CNAME .)
    PLUS            reduce using rule 31 (expression -> expression POINT CNAME .)
    MINUS           reduce using rule 31 (expression -> expression POINT CNAME .)
    TIMDIV          reduce using rule 31 (expression -> expression POINT CNAME .)
    RCBRACK         reduce using rule 31 (expression -> expression POINT CNAME .)
    NEWLINE         reduce using rule 31 (expression -> expression POINT CNAME .)
    ELSE            reduce using rule 31 (expression -> expression POINT CNAME .)
    RSBRACK         reduce using rule 31 (expression -> expression POINT CNAME .)
    THEN            reduce using rule 31 (expression -> expression POINT CNAME .)
    RPAREN          reduce using rule 31 (expression -> expression POINT CNAME .)
    COLON           reduce using rule 31 (expression -> expression POINT CNAME .)


state 113

    (36) expression -> expression LSBRACK expression . RSBRACK
    (29) expression -> expression . POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> expression . POINT CNAME LPAREN RPAREN
    (31) expression -> expression . POINT CNAME
    (36) expression -> expression . LSBRACK expression RSBRACK
    (59) expression -> expression . COMPARE expression
    (61) expression -> expression . OR expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . IN expression
    (64) expression -> expression . MODULO expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . TIMDIV expression

    RSBRACK         shift and go to state 131
    POINT           shift and go to state 84
    LSBRACK         shift and go to state 85
    COMPARE         shift and go to state 81
    OR              shift and go to state 88
    AND             shift and go to state 78
    IN              shift and go to state 83
    MODULO          shift and go to state 87
    PLUS            shift and go to state 86
    MINUS           shift and go to state 80
    TIMDIV          shift and go to state 79


state 114

    (65) expression -> expression PLUS expression .
    (29) expression -> expression . POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> expression . POINT CNAME LPAREN RPAREN
    (31) expression -> expression . POINT CNAME
    (36) expression -> expression . LSBRACK expression RSBRACK
    (59) expression -> expression . COMPARE expression
    (61) expression -> expression . OR expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . IN expression
    (64) expression -> expression . MODULO expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . TIMDIV expression

    COMMA           reduce using rule 65 (expression -> expression PLUS expression .)
    POINT           reduce using rule 65 (expression -> expression PLUS expression .)
    LSBRACK         reduce using rule 65 (expression -> expression PLUS expression .)
    COMPARE         reduce using rule 65 (expression -> expression PLUS expression .)
    OR              reduce using rule 65 (expression -> expression PLUS expression .)
    AND             reduce using rule 65 (expression -> expression PLUS expression .)
    IN              reduce using rule 65 (expression -> expression PLUS expression .)
    MODULO          reduce using rule 65 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 65 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 65 (expression -> expression PLUS expression .)
    RCBRACK         reduce using rule 65 (expression -> expression PLUS expression .)
    NEWLINE         reduce using rule 65 (expression -> expression PLUS expression .)
    ELSE            reduce using rule 65 (expression -> expression PLUS expression .)
    RSBRACK         reduce using rule 65 (expression -> expression PLUS expression .)
    THEN            reduce using rule 65 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 65 (expression -> expression PLUS expression .)
    COLON           reduce using rule 65 (expression -> expression PLUS expression .)
    TIMDIV          shift and go to state 79

  ! TIMDIV          [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! POINT           [ shift and go to state 84 ]
  ! LSBRACK         [ shift and go to state 85 ]
  ! COMPARE         [ shift and go to state 81 ]
  ! OR              [ shift and go to state 88 ]
  ! AND             [ shift and go to state 78 ]
  ! IN              [ shift and go to state 83 ]
  ! MODULO          [ shift and go to state 87 ]
  ! PLUS            [ shift and go to state 86 ]
  ! MINUS           [ shift and go to state 80 ]


state 115

    (64) expression -> expression MODULO expression .
    (29) expression -> expression . POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> expression . POINT CNAME LPAREN RPAREN
    (31) expression -> expression . POINT CNAME
    (36) expression -> expression . LSBRACK expression RSBRACK
    (59) expression -> expression . COMPARE expression
    (61) expression -> expression . OR expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . IN expression
    (64) expression -> expression . MODULO expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . TIMDIV expression

    COMMA           reduce using rule 64 (expression -> expression MODULO expression .)
    POINT           reduce using rule 64 (expression -> expression MODULO expression .)
    LSBRACK         reduce using rule 64 (expression -> expression MODULO expression .)
    COMPARE         reduce using rule 64 (expression -> expression MODULO expression .)
    OR              reduce using rule 64 (expression -> expression MODULO expression .)
    AND             reduce using rule 64 (expression -> expression MODULO expression .)
    IN              reduce using rule 64 (expression -> expression MODULO expression .)
    MODULO          reduce using rule 64 (expression -> expression MODULO expression .)
    PLUS            reduce using rule 64 (expression -> expression MODULO expression .)
    MINUS           reduce using rule 64 (expression -> expression MODULO expression .)
    RCBRACK         reduce using rule 64 (expression -> expression MODULO expression .)
    NEWLINE         reduce using rule 64 (expression -> expression MODULO expression .)
    ELSE            reduce using rule 64 (expression -> expression MODULO expression .)
    RSBRACK         reduce using rule 64 (expression -> expression MODULO expression .)
    THEN            reduce using rule 64 (expression -> expression MODULO expression .)
    RPAREN          reduce using rule 64 (expression -> expression MODULO expression .)
    COLON           reduce using rule 64 (expression -> expression MODULO expression .)
    TIMDIV          shift and go to state 79

  ! TIMDIV          [ reduce using rule 64 (expression -> expression MODULO expression .) ]
  ! POINT           [ shift and go to state 84 ]
  ! LSBRACK         [ shift and go to state 85 ]
  ! COMPARE         [ shift and go to state 81 ]
  ! OR              [ shift and go to state 88 ]
  ! AND             [ shift and go to state 78 ]
  ! IN              [ shift and go to state 83 ]
  ! MODULO          [ shift and go to state 87 ]
  ! PLUS            [ shift and go to state 86 ]
  ! MINUS           [ shift and go to state 80 ]


state 116

    (61) expression -> expression OR expression .
    (29) expression -> expression . POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> expression . POINT CNAME LPAREN RPAREN
    (31) expression -> expression . POINT CNAME
    (36) expression -> expression . LSBRACK expression RSBRACK
    (59) expression -> expression . COMPARE expression
    (61) expression -> expression . OR expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . IN expression
    (64) expression -> expression . MODULO expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . TIMDIV expression

    COMMA           reduce using rule 61 (expression -> expression OR expression .)
    POINT           reduce using rule 61 (expression -> expression OR expression .)
    LSBRACK         reduce using rule 61 (expression -> expression OR expression .)
    OR              reduce using rule 61 (expression -> expression OR expression .)
    IN              reduce using rule 61 (expression -> expression OR expression .)
    RCBRACK         reduce using rule 61 (expression -> expression OR expression .)
    NEWLINE         reduce using rule 61 (expression -> expression OR expression .)
    ELSE            reduce using rule 61 (expression -> expression OR expression .)
    RSBRACK         reduce using rule 61 (expression -> expression OR expression .)
    THEN            reduce using rule 61 (expression -> expression OR expression .)
    RPAREN          reduce using rule 61 (expression -> expression OR expression .)
    COLON           reduce using rule 61 (expression -> expression OR expression .)
    COMPARE         shift and go to state 81
    AND             shift and go to state 78
    MODULO          shift and go to state 87
    PLUS            shift and go to state 86
    MINUS           shift and go to state 80
    TIMDIV          shift and go to state 79

  ! COMPARE         [ reduce using rule 61 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 61 (expression -> expression OR expression .) ]
  ! MODULO          [ reduce using rule 61 (expression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 61 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 61 (expression -> expression OR expression .) ]
  ! TIMDIV          [ reduce using rule 61 (expression -> expression OR expression .) ]
  ! POINT           [ shift and go to state 84 ]
  ! LSBRACK         [ shift and go to state 85 ]
  ! OR              [ shift and go to state 88 ]
  ! IN              [ shift and go to state 83 ]


state 117

    (70) expression -> forall_header IN expression . COLON action_statement
    (29) expression -> expression . POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> expression . POINT CNAME LPAREN RPAREN
    (31) expression -> expression . POINT CNAME
    (36) expression -> expression . LSBRACK expression RSBRACK
    (59) expression -> expression . COMPARE expression
    (61) expression -> expression . OR expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . IN expression
    (64) expression -> expression . MODULO expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . TIMDIV expression

    COLON           shift and go to state 132
    POINT           shift and go to state 84
    LSBRACK         shift and go to state 85
    COMPARE         shift and go to state 81
    OR              shift and go to state 88
    AND             shift and go to state 78
    IN              shift and go to state 83
    MODULO          shift and go to state 87
    PLUS            shift and go to state 86
    MINUS           shift and go to state 80
    TIMDIV          shift and go to state 79


state 118

    (56) expression -> NEWEVENT CNAME dictvalue .

    COMMA           reduce using rule 56 (expression -> NEWEVENT CNAME dictvalue .)
    POINT           reduce using rule 56 (expression -> NEWEVENT CNAME dictvalue .)
    LSBRACK         reduce using rule 56 (expression -> NEWEVENT CNAME dictvalue .)
    COMPARE         reduce using rule 56 (expression -> NEWEVENT CNAME dictvalue .)
    OR              reduce using rule 56 (expression -> NEWEVENT CNAME dictvalue .)
    AND             reduce using rule 56 (expression -> NEWEVENT CNAME dictvalue .)
    IN              reduce using rule 56 (expression -> NEWEVENT CNAME dictvalue .)
    MODULO          reduce using rule 56 (expression -> NEWEVENT CNAME dictvalue .)
    PLUS            reduce using rule 56 (expression -> NEWEVENT CNAME dictvalue .)
    MINUS           reduce using rule 56 (expression -> NEWEVENT CNAME dictvalue .)
    TIMDIV          reduce using rule 56 (expression -> NEWEVENT CNAME dictvalue .)
    RCBRACK         reduce using rule 56 (expression -> NEWEVENT CNAME dictvalue .)
    NEWLINE         reduce using rule 56 (expression -> NEWEVENT CNAME dictvalue .)
    ELSE            reduce using rule 56 (expression -> NEWEVENT CNAME dictvalue .)
    RSBRACK         reduce using rule 56 (expression -> NEWEVENT CNAME dictvalue .)
    THEN            reduce using rule 56 (expression -> NEWEVENT CNAME dictvalue .)
    RPAREN          reduce using rule 56 (expression -> NEWEVENT CNAME dictvalue .)
    COLON           reduce using rule 56 (expression -> NEWEVENT CNAME dictvalue .)


state 119

    (68) expression -> IF expression THEN . action_statement ELSE action_statement
    (25) action_statement -> . expression
    (26) action_statement -> . assign
    (29) expression -> . expression POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> . expression POINT CNAME LPAREN RPAREN
    (31) expression -> . expression POINT CNAME
    (32) expression -> . CNAME LPAREN expressionlist RPAREN
    (33) expression -> . CNAME LPAREN RPAREN
    (36) expression -> . expression LSBRACK expression RSBRACK
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . CNAME
    (39) expression -> . NUMBER
    (40) expression -> . MINUS expression
    (41) expression -> . stringval
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . NONE
    (45) expression -> . LSBRACK listitems RSBRACK
    (46) expression -> . LSBRACK RSBRACK
    (49) expression -> . dictvalue
    (56) expression -> . NEWEVENT CNAME dictvalue
    (59) expression -> . expression COMPARE expression
    (60) expression -> . NOT expression
    (61) expression -> . expression OR expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression IN expression
    (64) expression -> . expression MODULO expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression TIMDIV expression
    (68) expression -> . IF expression THEN action_statement ELSE action_statement
    (70) expression -> . forall_header IN expression COLON action_statement
    (57) assign -> . CNAME EQUALS expression
    (58) assign -> . CNAME LSBRACK expression RSBRACK EQUALS expression
    (71) stringval -> . STRING
    (50) dictvalue -> . LCBRACK dictitems RCBRACK
    (51) dictvalue -> . LCBRACK RCBRACK
    (69) forall_header -> . FORALL CNAME

    CNAME           shift and go to state 74
    LPAREN          shift and go to state 58
    NUMBER          shift and go to state 56
    MINUS           shift and go to state 55
    TRUE            shift and go to state 49
    FALSE           shift and go to state 52
    NONE            shift and go to state 45
    LSBRACK         shift and go to state 59
    NEWEVENT        shift and go to state 48
    NOT             shift and go to state 57
    IF              shift and go to state 51
    STRING          shift and go to state 22
    LCBRACK         shift and go to state 36
    FORALL          shift and go to state 53

    expression                     shift and go to state 71
    stringval                      shift and go to state 46
    action_statement               shift and go to state 133
    assign                         shift and go to state 75
    dictvalue                      shift and go to state 50
    forall_header                  shift and go to state 47

state 120

    (34) expressionlist -> expression .
    (35) expressionlist -> expression . COMMA expressionlist
    (29) expression -> expression . POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> expression . POINT CNAME LPAREN RPAREN
    (31) expression -> expression . POINT CNAME
    (36) expression -> expression . LSBRACK expression RSBRACK
    (59) expression -> expression . COMPARE expression
    (61) expression -> expression . OR expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . IN expression
    (64) expression -> expression . MODULO expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . TIMDIV expression

    RPAREN          reduce using rule 34 (expressionlist -> expression .)
    COMMA           shift and go to state 134
    POINT           shift and go to state 84
    LSBRACK         shift and go to state 85
    COMPARE         shift and go to state 81
    OR              shift and go to state 88
    AND             shift and go to state 78
    IN              shift and go to state 83
    MODULO          shift and go to state 87
    PLUS            shift and go to state 86
    MINUS           shift and go to state 80
    TIMDIV          shift and go to state 79


state 121

    (33) expression -> CNAME LPAREN RPAREN .

    COMMA           reduce using rule 33 (expression -> CNAME LPAREN RPAREN .)
    POINT           reduce using rule 33 (expression -> CNAME LPAREN RPAREN .)
    LSBRACK         reduce using rule 33 (expression -> CNAME LPAREN RPAREN .)
    COMPARE         reduce using rule 33 (expression -> CNAME LPAREN RPAREN .)
    OR              reduce using rule 33 (expression -> CNAME LPAREN RPAREN .)
    AND             reduce using rule 33 (expression -> CNAME LPAREN RPAREN .)
    IN              reduce using rule 33 (expression -> CNAME LPAREN RPAREN .)
    MODULO          reduce using rule 33 (expression -> CNAME LPAREN RPAREN .)
    PLUS            reduce using rule 33 (expression -> CNAME LPAREN RPAREN .)
    MINUS           reduce using rule 33 (expression -> CNAME LPAREN RPAREN .)
    TIMDIV          reduce using rule 33 (expression -> CNAME LPAREN RPAREN .)
    RCBRACK         reduce using rule 33 (expression -> CNAME LPAREN RPAREN .)
    NEWLINE         reduce using rule 33 (expression -> CNAME LPAREN RPAREN .)
    ELSE            reduce using rule 33 (expression -> CNAME LPAREN RPAREN .)
    RSBRACK         reduce using rule 33 (expression -> CNAME LPAREN RPAREN .)
    THEN            reduce using rule 33 (expression -> CNAME LPAREN RPAREN .)
    RPAREN          reduce using rule 33 (expression -> CNAME LPAREN RPAREN .)
    COLON           reduce using rule 33 (expression -> CNAME LPAREN RPAREN .)


state 122

    (32) expression -> CNAME LPAREN expressionlist . RPAREN

    RPAREN          shift and go to state 135


state 123

    (37) expression -> LPAREN expression RPAREN .

    COMMA           reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    POINT           reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    LSBRACK         reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    COMPARE         reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    IN              reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    MODULO          reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    TIMDIV          reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    RCBRACK         reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    NEWLINE         reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    RSBRACK         reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    THEN            reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    COLON           reduce using rule 37 (expression -> LPAREN expression RPAREN .)


state 124

    (48) listitems -> expression COMMA . listitems
    (47) listitems -> . expression
    (48) listitems -> . expression COMMA listitems
    (29) expression -> . expression POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> . expression POINT CNAME LPAREN RPAREN
    (31) expression -> . expression POINT CNAME
    (32) expression -> . CNAME LPAREN expressionlist RPAREN
    (33) expression -> . CNAME LPAREN RPAREN
    (36) expression -> . expression LSBRACK expression RSBRACK
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . CNAME
    (39) expression -> . NUMBER
    (40) expression -> . MINUS expression
    (41) expression -> . stringval
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . NONE
    (45) expression -> . LSBRACK listitems RSBRACK
    (46) expression -> . LSBRACK RSBRACK
    (49) expression -> . dictvalue
    (56) expression -> . NEWEVENT CNAME dictvalue
    (59) expression -> . expression COMPARE expression
    (60) expression -> . NOT expression
    (61) expression -> . expression OR expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression IN expression
    (64) expression -> . expression MODULO expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression TIMDIV expression
    (68) expression -> . IF expression THEN action_statement ELSE action_statement
    (70) expression -> . forall_header IN expression COLON action_statement
    (71) stringval -> . STRING
    (50) dictvalue -> . LCBRACK dictitems RCBRACK
    (51) dictvalue -> . LCBRACK RCBRACK
    (69) forall_header -> . FORALL CNAME

    CNAME           shift and go to state 54
    LPAREN          shift and go to state 58
    NUMBER          shift and go to state 56
    MINUS           shift and go to state 55
    TRUE            shift and go to state 49
    FALSE           shift and go to state 52
    NONE            shift and go to state 45
    LSBRACK         shift and go to state 59
    NEWEVENT        shift and go to state 48
    NOT             shift and go to state 57
    IF              shift and go to state 51
    STRING          shift and go to state 22
    LCBRACK         shift and go to state 36
    FORALL          shift and go to state 53

    expression                     shift and go to state 97
    stringval                      shift and go to state 46
    listitems                      shift and go to state 136
    dictvalue                      shift and go to state 50
    forall_header                  shift and go to state 47

state 125

    (45) expression -> LSBRACK listitems RSBRACK .

    COMMA           reduce using rule 45 (expression -> LSBRACK listitems RSBRACK .)
    POINT           reduce using rule 45 (expression -> LSBRACK listitems RSBRACK .)
    LSBRACK         reduce using rule 45 (expression -> LSBRACK listitems RSBRACK .)
    COMPARE         reduce using rule 45 (expression -> LSBRACK listitems RSBRACK .)
    OR              reduce using rule 45 (expression -> LSBRACK listitems RSBRACK .)
    AND             reduce using rule 45 (expression -> LSBRACK listitems RSBRACK .)
    IN              reduce using rule 45 (expression -> LSBRACK listitems RSBRACK .)
    MODULO          reduce using rule 45 (expression -> LSBRACK listitems RSBRACK .)
    PLUS            reduce using rule 45 (expression -> LSBRACK listitems RSBRACK .)
    MINUS           reduce using rule 45 (expression -> LSBRACK listitems RSBRACK .)
    TIMDIV          reduce using rule 45 (expression -> LSBRACK listitems RSBRACK .)
    RCBRACK         reduce using rule 45 (expression -> LSBRACK listitems RSBRACK .)
    NEWLINE         reduce using rule 45 (expression -> LSBRACK listitems RSBRACK .)
    ELSE            reduce using rule 45 (expression -> LSBRACK listitems RSBRACK .)
    RSBRACK         reduce using rule 45 (expression -> LSBRACK listitems RSBRACK .)
    THEN            reduce using rule 45 (expression -> LSBRACK listitems RSBRACK .)
    RPAREN          reduce using rule 45 (expression -> LSBRACK listitems RSBRACK .)
    COLON           reduce using rule 45 (expression -> LSBRACK listitems RSBRACK .)


state 126

    (58) assign -> CNAME LSBRACK expression RSBRACK EQUALS . expression
    (29) expression -> . expression POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> . expression POINT CNAME LPAREN RPAREN
    (31) expression -> . expression POINT CNAME
    (32) expression -> . CNAME LPAREN expressionlist RPAREN
    (33) expression -> . CNAME LPAREN RPAREN
    (36) expression -> . expression LSBRACK expression RSBRACK
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . CNAME
    (39) expression -> . NUMBER
    (40) expression -> . MINUS expression
    (41) expression -> . stringval
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . NONE
    (45) expression -> . LSBRACK listitems RSBRACK
    (46) expression -> . LSBRACK RSBRACK
    (49) expression -> . dictvalue
    (56) expression -> . NEWEVENT CNAME dictvalue
    (59) expression -> . expression COMPARE expression
    (60) expression -> . NOT expression
    (61) expression -> . expression OR expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression IN expression
    (64) expression -> . expression MODULO expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression TIMDIV expression
    (68) expression -> . IF expression THEN action_statement ELSE action_statement
    (70) expression -> . forall_header IN expression COLON action_statement
    (71) stringval -> . STRING
    (50) dictvalue -> . LCBRACK dictitems RCBRACK
    (51) dictvalue -> . LCBRACK RCBRACK
    (69) forall_header -> . FORALL CNAME

    CNAME           shift and go to state 54
    LPAREN          shift and go to state 58
    NUMBER          shift and go to state 56
    MINUS           shift and go to state 55
    TRUE            shift and go to state 49
    FALSE           shift and go to state 52
    NONE            shift and go to state 45
    LSBRACK         shift and go to state 59
    NEWEVENT        shift and go to state 48
    NOT             shift and go to state 57
    IF              shift and go to state 51
    STRING          shift and go to state 22
    LCBRACK         shift and go to state 36
    FORALL          shift and go to state 53

    expression                     shift and go to state 137
    stringval                      shift and go to state 46
    dictvalue                      shift and go to state 50
    forall_header                  shift and go to state 47

state 127

    (54) dictitems -> dicttag COLON expression .
    (55) dictitems -> dicttag COLON expression . COMMA dictitems
    (29) expression -> expression . POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> expression . POINT CNAME LPAREN RPAREN
    (31) expression -> expression . POINT CNAME
    (36) expression -> expression . LSBRACK expression RSBRACK
    (59) expression -> expression . COMPARE expression
    (61) expression -> expression . OR expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . IN expression
    (64) expression -> expression . MODULO expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . TIMDIV expression

    RCBRACK         reduce using rule 54 (dictitems -> dicttag COLON expression .)
    COMMA           shift and go to state 138
    POINT           shift and go to state 84
    LSBRACK         shift and go to state 85
    COMPARE         shift and go to state 81
    OR              shift and go to state 88
    AND             shift and go to state 78
    IN              shift and go to state 83
    MODULO          shift and go to state 87
    PLUS            shift and go to state 86
    MINUS           shift and go to state 80
    TIMDIV          shift and go to state 79


state 128

    (13) celldef -> CELL stringval GADGET stringval OPTIONS dictvalue . NEWLINE

    NEWLINE         shift and go to state 139


state 129

    (28) calls -> action_statement newline calls .

    NEWLINE         reduce using rule 28 (calls -> action_statement newline calls .)
    IMPORT          reduce using rule 28 (calls -> action_statement newline calls .)
    CONSTANT        reduce using rule 28 (calls -> action_statement newline calls .)
    DECLARE         reduce using rule 28 (calls -> action_statement newline calls .)
    CELL            reduce using rule 28 (calls -> action_statement newline calls .)
    RULE            reduce using rule 28 (calls -> action_statement newline calls .)
    EVENT           reduce using rule 28 (calls -> action_statement newline calls .)
    $end            reduce using rule 28 (calls -> action_statement newline calls .)


state 130

    (29) expression -> expression POINT CNAME LPAREN . expressionlist RPAREN
    (30) expression -> expression POINT CNAME LPAREN . RPAREN
    (34) expressionlist -> . expression
    (35) expressionlist -> . expression COMMA expressionlist
    (29) expression -> . expression POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> . expression POINT CNAME LPAREN RPAREN
    (31) expression -> . expression POINT CNAME
    (32) expression -> . CNAME LPAREN expressionlist RPAREN
    (33) expression -> . CNAME LPAREN RPAREN
    (36) expression -> . expression LSBRACK expression RSBRACK
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . CNAME
    (39) expression -> . NUMBER
    (40) expression -> . MINUS expression
    (41) expression -> . stringval
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . NONE
    (45) expression -> . LSBRACK listitems RSBRACK
    (46) expression -> . LSBRACK RSBRACK
    (49) expression -> . dictvalue
    (56) expression -> . NEWEVENT CNAME dictvalue
    (59) expression -> . expression COMPARE expression
    (60) expression -> . NOT expression
    (61) expression -> . expression OR expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression IN expression
    (64) expression -> . expression MODULO expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression TIMDIV expression
    (68) expression -> . IF expression THEN action_statement ELSE action_statement
    (70) expression -> . forall_header IN expression COLON action_statement
    (71) stringval -> . STRING
    (50) dictvalue -> . LCBRACK dictitems RCBRACK
    (51) dictvalue -> . LCBRACK RCBRACK
    (69) forall_header -> . FORALL CNAME

    RPAREN          shift and go to state 140
    CNAME           shift and go to state 54
    LPAREN          shift and go to state 58
    NUMBER          shift and go to state 56
    MINUS           shift and go to state 55
    TRUE            shift and go to state 49
    FALSE           shift and go to state 52
    NONE            shift and go to state 45
    LSBRACK         shift and go to state 59
    NEWEVENT        shift and go to state 48
    NOT             shift and go to state 57
    IF              shift and go to state 51
    STRING          shift and go to state 22
    LCBRACK         shift and go to state 36
    FORALL          shift and go to state 53

    expression                     shift and go to state 120
    stringval                      shift and go to state 46
    dictvalue                      shift and go to state 50
    forall_header                  shift and go to state 47
    expressionlist                 shift and go to state 141

state 131

    (36) expression -> expression LSBRACK expression RSBRACK .

    COMMA           reduce using rule 36 (expression -> expression LSBRACK expression RSBRACK .)
    POINT           reduce using rule 36 (expression -> expression LSBRACK expression RSBRACK .)
    LSBRACK         reduce using rule 36 (expression -> expression LSBRACK expression RSBRACK .)
    COMPARE         reduce using rule 36 (expression -> expression LSBRACK expression RSBRACK .)
    OR              reduce using rule 36 (expression -> expression LSBRACK expression RSBRACK .)
    AND             reduce using rule 36 (expression -> expression LSBRACK expression RSBRACK .)
    IN              reduce using rule 36 (expression -> expression LSBRACK expression RSBRACK .)
    MODULO          reduce using rule 36 (expression -> expression LSBRACK expression RSBRACK .)
    PLUS            reduce using rule 36 (expression -> expression LSBRACK expression RSBRACK .)
    MINUS           reduce using rule 36 (expression -> expression LSBRACK expression RSBRACK .)
    TIMDIV          reduce using rule 36 (expression -> expression LSBRACK expression RSBRACK .)
    RCBRACK         reduce using rule 36 (expression -> expression LSBRACK expression RSBRACK .)
    NEWLINE         reduce using rule 36 (expression -> expression LSBRACK expression RSBRACK .)
    ELSE            reduce using rule 36 (expression -> expression LSBRACK expression RSBRACK .)
    RSBRACK         reduce using rule 36 (expression -> expression LSBRACK expression RSBRACK .)
    THEN            reduce using rule 36 (expression -> expression LSBRACK expression RSBRACK .)
    RPAREN          reduce using rule 36 (expression -> expression LSBRACK expression RSBRACK .)
    COLON           reduce using rule 36 (expression -> expression LSBRACK expression RSBRACK .)


state 132

    (70) expression -> forall_header IN expression COLON . action_statement
    (25) action_statement -> . expression
    (26) action_statement -> . assign
    (29) expression -> . expression POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> . expression POINT CNAME LPAREN RPAREN
    (31) expression -> . expression POINT CNAME
    (32) expression -> . CNAME LPAREN expressionlist RPAREN
    (33) expression -> . CNAME LPAREN RPAREN
    (36) expression -> . expression LSBRACK expression RSBRACK
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . CNAME
    (39) expression -> . NUMBER
    (40) expression -> . MINUS expression
    (41) expression -> . stringval
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . NONE
    (45) expression -> . LSBRACK listitems RSBRACK
    (46) expression -> . LSBRACK RSBRACK
    (49) expression -> . dictvalue
    (56) expression -> . NEWEVENT CNAME dictvalue
    (59) expression -> . expression COMPARE expression
    (60) expression -> . NOT expression
    (61) expression -> . expression OR expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression IN expression
    (64) expression -> . expression MODULO expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression TIMDIV expression
    (68) expression -> . IF expression THEN action_statement ELSE action_statement
    (70) expression -> . forall_header IN expression COLON action_statement
    (57) assign -> . CNAME EQUALS expression
    (58) assign -> . CNAME LSBRACK expression RSBRACK EQUALS expression
    (71) stringval -> . STRING
    (50) dictvalue -> . LCBRACK dictitems RCBRACK
    (51) dictvalue -> . LCBRACK RCBRACK
    (69) forall_header -> . FORALL CNAME

    CNAME           shift and go to state 74
    LPAREN          shift and go to state 58
    NUMBER          shift and go to state 56
    MINUS           shift and go to state 55
    TRUE            shift and go to state 49
    FALSE           shift and go to state 52
    NONE            shift and go to state 45
    LSBRACK         shift and go to state 59
    NEWEVENT        shift and go to state 48
    NOT             shift and go to state 57
    IF              shift and go to state 51
    STRING          shift and go to state 22
    LCBRACK         shift and go to state 36
    FORALL          shift and go to state 53

    expression                     shift and go to state 71
    assign                         shift and go to state 75
    action_statement               shift and go to state 142
    stringval                      shift and go to state 46
    dictvalue                      shift and go to state 50
    forall_header                  shift and go to state 47

state 133

    (68) expression -> IF expression THEN action_statement . ELSE action_statement

    ELSE            shift and go to state 143


state 134

    (35) expressionlist -> expression COMMA . expressionlist
    (34) expressionlist -> . expression
    (35) expressionlist -> . expression COMMA expressionlist
    (29) expression -> . expression POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> . expression POINT CNAME LPAREN RPAREN
    (31) expression -> . expression POINT CNAME
    (32) expression -> . CNAME LPAREN expressionlist RPAREN
    (33) expression -> . CNAME LPAREN RPAREN
    (36) expression -> . expression LSBRACK expression RSBRACK
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . CNAME
    (39) expression -> . NUMBER
    (40) expression -> . MINUS expression
    (41) expression -> . stringval
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . NONE
    (45) expression -> . LSBRACK listitems RSBRACK
    (46) expression -> . LSBRACK RSBRACK
    (49) expression -> . dictvalue
    (56) expression -> . NEWEVENT CNAME dictvalue
    (59) expression -> . expression COMPARE expression
    (60) expression -> . NOT expression
    (61) expression -> . expression OR expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression IN expression
    (64) expression -> . expression MODULO expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression TIMDIV expression
    (68) expression -> . IF expression THEN action_statement ELSE action_statement
    (70) expression -> . forall_header IN expression COLON action_statement
    (71) stringval -> . STRING
    (50) dictvalue -> . LCBRACK dictitems RCBRACK
    (51) dictvalue -> . LCBRACK RCBRACK
    (69) forall_header -> . FORALL CNAME

    CNAME           shift and go to state 54
    LPAREN          shift and go to state 58
    NUMBER          shift and go to state 56
    MINUS           shift and go to state 55
    TRUE            shift and go to state 49
    FALSE           shift and go to state 52
    NONE            shift and go to state 45
    LSBRACK         shift and go to state 59
    NEWEVENT        shift and go to state 48
    NOT             shift and go to state 57
    IF              shift and go to state 51
    STRING          shift and go to state 22
    LCBRACK         shift and go to state 36
    FORALL          shift and go to state 53

    expression                     shift and go to state 120
    stringval                      shift and go to state 46
    dictvalue                      shift and go to state 50
    forall_header                  shift and go to state 47
    expressionlist                 shift and go to state 144

state 135

    (32) expression -> CNAME LPAREN expressionlist RPAREN .

    COMMA           reduce using rule 32 (expression -> CNAME LPAREN expressionlist RPAREN .)
    POINT           reduce using rule 32 (expression -> CNAME LPAREN expressionlist RPAREN .)
    LSBRACK         reduce using rule 32 (expression -> CNAME LPAREN expressionlist RPAREN .)
    COMPARE         reduce using rule 32 (expression -> CNAME LPAREN expressionlist RPAREN .)
    OR              reduce using rule 32 (expression -> CNAME LPAREN expressionlist RPAREN .)
    AND             reduce using rule 32 (expression -> CNAME LPAREN expressionlist RPAREN .)
    IN              reduce using rule 32 (expression -> CNAME LPAREN expressionlist RPAREN .)
    MODULO          reduce using rule 32 (expression -> CNAME LPAREN expressionlist RPAREN .)
    PLUS            reduce using rule 32 (expression -> CNAME LPAREN expressionlist RPAREN .)
    MINUS           reduce using rule 32 (expression -> CNAME LPAREN expressionlist RPAREN .)
    TIMDIV          reduce using rule 32 (expression -> CNAME LPAREN expressionlist RPAREN .)
    RCBRACK         reduce using rule 32 (expression -> CNAME LPAREN expressionlist RPAREN .)
    NEWLINE         reduce using rule 32 (expression -> CNAME LPAREN expressionlist RPAREN .)
    ELSE            reduce using rule 32 (expression -> CNAME LPAREN expressionlist RPAREN .)
    RSBRACK         reduce using rule 32 (expression -> CNAME LPAREN expressionlist RPAREN .)
    THEN            reduce using rule 32 (expression -> CNAME LPAREN expressionlist RPAREN .)
    RPAREN          reduce using rule 32 (expression -> CNAME LPAREN expressionlist RPAREN .)
    COLON           reduce using rule 32 (expression -> CNAME LPAREN expressionlist RPAREN .)


state 136

    (48) listitems -> expression COMMA listitems .

    RSBRACK         reduce using rule 48 (listitems -> expression COMMA listitems .)


state 137

    (58) assign -> CNAME LSBRACK expression RSBRACK EQUALS expression .
    (29) expression -> expression . POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> expression . POINT CNAME LPAREN RPAREN
    (31) expression -> expression . POINT CNAME
    (36) expression -> expression . LSBRACK expression RSBRACK
    (59) expression -> expression . COMPARE expression
    (61) expression -> expression . OR expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . IN expression
    (64) expression -> expression . MODULO expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . TIMDIV expression

  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for LSBRACK resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMDIV resolved as shift
    NEWLINE         reduce using rule 58 (assign -> CNAME LSBRACK expression RSBRACK EQUALS expression .)
    ELSE            reduce using rule 58 (assign -> CNAME LSBRACK expression RSBRACK EQUALS expression .)
    RSBRACK         reduce using rule 58 (assign -> CNAME LSBRACK expression RSBRACK EQUALS expression .)
    THEN            reduce using rule 58 (assign -> CNAME LSBRACK expression RSBRACK EQUALS expression .)
    RPAREN          reduce using rule 58 (assign -> CNAME LSBRACK expression RSBRACK EQUALS expression .)
    COMMA           reduce using rule 58 (assign -> CNAME LSBRACK expression RSBRACK EQUALS expression .)
    COLON           reduce using rule 58 (assign -> CNAME LSBRACK expression RSBRACK EQUALS expression .)
    RCBRACK         reduce using rule 58 (assign -> CNAME LSBRACK expression RSBRACK EQUALS expression .)
    POINT           shift and go to state 84
    LSBRACK         shift and go to state 85
    COMPARE         shift and go to state 81
    OR              shift and go to state 88
    AND             shift and go to state 78
    IN              shift and go to state 83
    MODULO          shift and go to state 87
    PLUS            shift and go to state 86
    MINUS           shift and go to state 80
    TIMDIV          shift and go to state 79

  ! POINT           [ reduce using rule 58 (assign -> CNAME LSBRACK expression RSBRACK EQUALS expression .) ]
  ! LSBRACK         [ reduce using rule 58 (assign -> CNAME LSBRACK expression RSBRACK EQUALS expression .) ]
  ! COMPARE         [ reduce using rule 58 (assign -> CNAME LSBRACK expression RSBRACK EQUALS expression .) ]
  ! OR              [ reduce using rule 58 (assign -> CNAME LSBRACK expression RSBRACK EQUALS expression .) ]
  ! AND             [ reduce using rule 58 (assign -> CNAME LSBRACK expression RSBRACK EQUALS expression .) ]
  ! IN              [ reduce using rule 58 (assign -> CNAME LSBRACK expression RSBRACK EQUALS expression .) ]
  ! MODULO          [ reduce using rule 58 (assign -> CNAME LSBRACK expression RSBRACK EQUALS expression .) ]
  ! PLUS            [ reduce using rule 58 (assign -> CNAME LSBRACK expression RSBRACK EQUALS expression .) ]
  ! MINUS           [ reduce using rule 58 (assign -> CNAME LSBRACK expression RSBRACK EQUALS expression .) ]
  ! TIMDIV          [ reduce using rule 58 (assign -> CNAME LSBRACK expression RSBRACK EQUALS expression .) ]


state 138

    (55) dictitems -> dicttag COLON expression COMMA . dictitems
    (54) dictitems -> . dicttag COLON expression
    (55) dictitems -> . dicttag COLON expression COMMA dictitems
    (52) dicttag -> . CNAME
    (53) dicttag -> . stringval
    (71) stringval -> . STRING

    CNAME           shift and go to state 62
    STRING          shift and go to state 22

    stringval                      shift and go to state 64
    dicttag                        shift and go to state 63
    dictitems                      shift and go to state 145

state 139

    (13) celldef -> CELL stringval GADGET stringval OPTIONS dictvalue NEWLINE .

    NEWLINE         reduce using rule 13 (celldef -> CELL stringval GADGET stringval OPTIONS dictvalue NEWLINE .)
    IMPORT          reduce using rule 13 (celldef -> CELL stringval GADGET stringval OPTIONS dictvalue NEWLINE .)
    CONSTANT        reduce using rule 13 (celldef -> CELL stringval GADGET stringval OPTIONS dictvalue NEWLINE .)
    DECLARE         reduce using rule 13 (celldef -> CELL stringval GADGET stringval OPTIONS dictvalue NEWLINE .)
    CELL            reduce using rule 13 (celldef -> CELL stringval GADGET stringval OPTIONS dictvalue NEWLINE .)
    RULE            reduce using rule 13 (celldef -> CELL stringval GADGET stringval OPTIONS dictvalue NEWLINE .)
    EVENT           reduce using rule 13 (celldef -> CELL stringval GADGET stringval OPTIONS dictvalue NEWLINE .)


state 140

    (30) expression -> expression POINT CNAME LPAREN RPAREN .

    COMMA           reduce using rule 30 (expression -> expression POINT CNAME LPAREN RPAREN .)
    POINT           reduce using rule 30 (expression -> expression POINT CNAME LPAREN RPAREN .)
    LSBRACK         reduce using rule 30 (expression -> expression POINT CNAME LPAREN RPAREN .)
    COMPARE         reduce using rule 30 (expression -> expression POINT CNAME LPAREN RPAREN .)
    OR              reduce using rule 30 (expression -> expression POINT CNAME LPAREN RPAREN .)
    AND             reduce using rule 30 (expression -> expression POINT CNAME LPAREN RPAREN .)
    IN              reduce using rule 30 (expression -> expression POINT CNAME LPAREN RPAREN .)
    MODULO          reduce using rule 30 (expression -> expression POINT CNAME LPAREN RPAREN .)
    PLUS            reduce using rule 30 (expression -> expression POINT CNAME LPAREN RPAREN .)
    MINUS           reduce using rule 30 (expression -> expression POINT CNAME LPAREN RPAREN .)
    TIMDIV          reduce using rule 30 (expression -> expression POINT CNAME LPAREN RPAREN .)
    RCBRACK         reduce using rule 30 (expression -> expression POINT CNAME LPAREN RPAREN .)
    NEWLINE         reduce using rule 30 (expression -> expression POINT CNAME LPAREN RPAREN .)
    ELSE            reduce using rule 30 (expression -> expression POINT CNAME LPAREN RPAREN .)
    RSBRACK         reduce using rule 30 (expression -> expression POINT CNAME LPAREN RPAREN .)
    THEN            reduce using rule 30 (expression -> expression POINT CNAME LPAREN RPAREN .)
    RPAREN          reduce using rule 30 (expression -> expression POINT CNAME LPAREN RPAREN .)
    COLON           reduce using rule 30 (expression -> expression POINT CNAME LPAREN RPAREN .)


state 141

    (29) expression -> expression POINT CNAME LPAREN expressionlist . RPAREN

    RPAREN          shift and go to state 146


state 142

    (70) expression -> forall_header IN expression COLON action_statement .

    COMMA           reduce using rule 70 (expression -> forall_header IN expression COLON action_statement .)
    POINT           reduce using rule 70 (expression -> forall_header IN expression COLON action_statement .)
    LSBRACK         reduce using rule 70 (expression -> forall_header IN expression COLON action_statement .)
    COMPARE         reduce using rule 70 (expression -> forall_header IN expression COLON action_statement .)
    OR              reduce using rule 70 (expression -> forall_header IN expression COLON action_statement .)
    AND             reduce using rule 70 (expression -> forall_header IN expression COLON action_statement .)
    IN              reduce using rule 70 (expression -> forall_header IN expression COLON action_statement .)
    MODULO          reduce using rule 70 (expression -> forall_header IN expression COLON action_statement .)
    PLUS            reduce using rule 70 (expression -> forall_header IN expression COLON action_statement .)
    MINUS           reduce using rule 70 (expression -> forall_header IN expression COLON action_statement .)
    TIMDIV          reduce using rule 70 (expression -> forall_header IN expression COLON action_statement .)
    RCBRACK         reduce using rule 70 (expression -> forall_header IN expression COLON action_statement .)
    NEWLINE         reduce using rule 70 (expression -> forall_header IN expression COLON action_statement .)
    ELSE            reduce using rule 70 (expression -> forall_header IN expression COLON action_statement .)
    RSBRACK         reduce using rule 70 (expression -> forall_header IN expression COLON action_statement .)
    THEN            reduce using rule 70 (expression -> forall_header IN expression COLON action_statement .)
    RPAREN          reduce using rule 70 (expression -> forall_header IN expression COLON action_statement .)
    COLON           reduce using rule 70 (expression -> forall_header IN expression COLON action_statement .)


state 143

    (68) expression -> IF expression THEN action_statement ELSE . action_statement
    (25) action_statement -> . expression
    (26) action_statement -> . assign
    (29) expression -> . expression POINT CNAME LPAREN expressionlist RPAREN
    (30) expression -> . expression POINT CNAME LPAREN RPAREN
    (31) expression -> . expression POINT CNAME
    (32) expression -> . CNAME LPAREN expressionlist RPAREN
    (33) expression -> . CNAME LPAREN RPAREN
    (36) expression -> . expression LSBRACK expression RSBRACK
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . CNAME
    (39) expression -> . NUMBER
    (40) expression -> . MINUS expression
    (41) expression -> . stringval
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . NONE
    (45) expression -> . LSBRACK listitems RSBRACK
    (46) expression -> . LSBRACK RSBRACK
    (49) expression -> . dictvalue
    (56) expression -> . NEWEVENT CNAME dictvalue
    (59) expression -> . expression COMPARE expression
    (60) expression -> . NOT expression
    (61) expression -> . expression OR expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression IN expression
    (64) expression -> . expression MODULO expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression TIMDIV expression
    (68) expression -> . IF expression THEN action_statement ELSE action_statement
    (70) expression -> . forall_header IN expression COLON action_statement
    (57) assign -> . CNAME EQUALS expression
    (58) assign -> . CNAME LSBRACK expression RSBRACK EQUALS expression
    (71) stringval -> . STRING
    (50) dictvalue -> . LCBRACK dictitems RCBRACK
    (51) dictvalue -> . LCBRACK RCBRACK
    (69) forall_header -> . FORALL CNAME

    CNAME           shift and go to state 74
    LPAREN          shift and go to state 58
    NUMBER          shift and go to state 56
    MINUS           shift and go to state 55
    TRUE            shift and go to state 49
    FALSE           shift and go to state 52
    NONE            shift and go to state 45
    LSBRACK         shift and go to state 59
    NEWEVENT        shift and go to state 48
    NOT             shift and go to state 57
    IF              shift and go to state 51
    STRING          shift and go to state 22
    LCBRACK         shift and go to state 36
    FORALL          shift and go to state 53

    expression                     shift and go to state 71
    stringval                      shift and go to state 46
    action_statement               shift and go to state 147
    assign                         shift and go to state 75
    dictvalue                      shift and go to state 50
    forall_header                  shift and go to state 47

state 144

    (35) expressionlist -> expression COMMA expressionlist .

    RPAREN          reduce using rule 35 (expressionlist -> expression COMMA expressionlist .)


state 145

    (55) dictitems -> dicttag COLON expression COMMA dictitems .

    RCBRACK         reduce using rule 55 (dictitems -> dicttag COLON expression COMMA dictitems .)


state 146

    (29) expression -> expression POINT CNAME LPAREN expressionlist RPAREN .

    COMMA           reduce using rule 29 (expression -> expression POINT CNAME LPAREN expressionlist RPAREN .)
    POINT           reduce using rule 29 (expression -> expression POINT CNAME LPAREN expressionlist RPAREN .)
    LSBRACK         reduce using rule 29 (expression -> expression POINT CNAME LPAREN expressionlist RPAREN .)
    COMPARE         reduce using rule 29 (expression -> expression POINT CNAME LPAREN expressionlist RPAREN .)
    OR              reduce using rule 29 (expression -> expression POINT CNAME LPAREN expressionlist RPAREN .)
    AND             reduce using rule 29 (expression -> expression POINT CNAME LPAREN expressionlist RPAREN .)
    IN              reduce using rule 29 (expression -> expression POINT CNAME LPAREN expressionlist RPAREN .)
    MODULO          reduce using rule 29 (expression -> expression POINT CNAME LPAREN expressionlist RPAREN .)
    PLUS            reduce using rule 29 (expression -> expression POINT CNAME LPAREN expressionlist RPAREN .)
    MINUS           reduce using rule 29 (expression -> expression POINT CNAME LPAREN expressionlist RPAREN .)
    TIMDIV          reduce using rule 29 (expression -> expression POINT CNAME LPAREN expressionlist RPAREN .)
    RCBRACK         reduce using rule 29 (expression -> expression POINT CNAME LPAREN expressionlist RPAREN .)
    NEWLINE         reduce using rule 29 (expression -> expression POINT CNAME LPAREN expressionlist RPAREN .)
    ELSE            reduce using rule 29 (expression -> expression POINT CNAME LPAREN expressionlist RPAREN .)
    RSBRACK         reduce using rule 29 (expression -> expression POINT CNAME LPAREN expressionlist RPAREN .)
    THEN            reduce using rule 29 (expression -> expression POINT CNAME LPAREN expressionlist RPAREN .)
    RPAREN          reduce using rule 29 (expression -> expression POINT CNAME LPAREN expressionlist RPAREN .)
    COLON           reduce using rule 29 (expression -> expression POINT CNAME LPAREN expressionlist RPAREN .)


state 147

    (68) expression -> IF expression THEN action_statement ELSE action_statement .

    COMMA           reduce using rule 68 (expression -> IF expression THEN action_statement ELSE action_statement .)
    POINT           reduce using rule 68 (expression -> IF expression THEN action_statement ELSE action_statement .)
    LSBRACK         reduce using rule 68 (expression -> IF expression THEN action_statement ELSE action_statement .)
    COMPARE         reduce using rule 68 (expression -> IF expression THEN action_statement ELSE action_statement .)
    OR              reduce using rule 68 (expression -> IF expression THEN action_statement ELSE action_statement .)
    AND             reduce using rule 68 (expression -> IF expression THEN action_statement ELSE action_statement .)
    IN              reduce using rule 68 (expression -> IF expression THEN action_statement ELSE action_statement .)
    MODULO          reduce using rule 68 (expression -> IF expression THEN action_statement ELSE action_statement .)
    PLUS            reduce using rule 68 (expression -> IF expression THEN action_statement ELSE action_statement .)
    MINUS           reduce using rule 68 (expression -> IF expression THEN action_statement ELSE action_statement .)
    TIMDIV          reduce using rule 68 (expression -> IF expression THEN action_statement ELSE action_statement .)
    RCBRACK         reduce using rule 68 (expression -> IF expression THEN action_statement ELSE action_statement .)
    NEWLINE         reduce using rule 68 (expression -> IF expression THEN action_statement ELSE action_statement .)
    ELSE            reduce using rule 68 (expression -> IF expression THEN action_statement ELSE action_statement .)
    RSBRACK         reduce using rule 68 (expression -> IF expression THEN action_statement ELSE action_statement .)
    THEN            reduce using rule 68 (expression -> IF expression THEN action_statement ELSE action_statement .)
    RPAREN          reduce using rule 68 (expression -> IF expression THEN action_statement ELSE action_statement .)
    COLON           reduce using rule 68 (expression -> IF expression THEN action_statement ELSE action_statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for POINT in state 60 resolved as shift
WARNING: shift/reduce conflict for LSBRACK in state 60 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 60 resolved as shift
WARNING: shift/reduce conflict for OR in state 60 resolved as shift
WARNING: shift/reduce conflict for AND in state 60 resolved as shift
WARNING: shift/reduce conflict for IN in state 60 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 60 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 60 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 60 resolved as shift
WARNING: shift/reduce conflict for TIMDIV in state 60 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 69 resolved as shift
WARNING: shift/reduce conflict for POINT in state 71 resolved as shift
WARNING: shift/reduce conflict for LSBRACK in state 71 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 71 resolved as shift
WARNING: shift/reduce conflict for OR in state 71 resolved as shift
WARNING: shift/reduce conflict for AND in state 71 resolved as shift
WARNING: shift/reduce conflict for IN in state 71 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 71 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 71 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 71 resolved as shift
WARNING: shift/reduce conflict for TIMDIV in state 71 resolved as shift
WARNING: shift/reduce conflict for LSBRACK in state 74 resolved as shift
WARNING: shift/reduce conflict for POINT in state 137 resolved as shift
WARNING: shift/reduce conflict for LSBRACK in state 137 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 137 resolved as shift
WARNING: shift/reduce conflict for OR in state 137 resolved as shift
WARNING: shift/reduce conflict for AND in state 137 resolved as shift
WARNING: shift/reduce conflict for IN in state 137 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 137 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 137 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 137 resolved as shift
WARNING: shift/reduce conflict for TIMDIV in state 137 resolved as shift
